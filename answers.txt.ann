A: Heres the approach I attempted which appears to be the key to the solution Remove All Related Components Delete your [@Flutter SDK#Artifical*] iOS developer tools including [@Xcode simulator#Fin-Concept*] and Dart SDK Essentially remove everything associated with Flutter Reinstallation Reinstall Flutter and all its dependencies from scratch [@Flutter Doctor#Event*] Execute flutter doctor to confirm that Flutter is correctly installed and there are no issues with your setup This approach in my opinion was the decisive factor in resolving the problem Logout and Relogin Log out of all your accounts on your Mac including [@iCloud and Xcode Ensure #Fin-Concept*]that your Mac is entirely disassociated from your iCloud account and then log in once again Following this stepbystep approach should help you overcome the issue you encountered after updating to macOS and encountering [@the Xcode CodeSign #Fin-Concept*]error Its important to note that software development environments can be sensitive to system updates and a clean reinstallation often serves as the solution to such issues
A: If your project folder is sync in icloud drive simply by turning it off resolve the problem that how i resolved my issue or try signing out your icloud id Hope it helps
A: I had similar weird codesign errors when compiling flutter in VSC on mac This only started to occur when I upgraded to [@macOS Sonoma#Location*] So how I fixed it I hope this helps some people First Issue My flutter project was no longer c[@ompiling and running via VSC #Organization*]but it was when building within Xcode Was getting code sign errors and compilation was failing My project files was stored within iCloud Drive and sync was on Solution So I move entire project across to a local folder on my HD and that seems to fix that issue Second Issue Then another runtime issueerror popped up around firebaseinitialization being called before firebase was initialised during runtime Solution I found that Xcode was not picking up GoogleServiceInfoplist file in Xcode running directory so I had to add it manually in Xcode and that fixed that issue
A: An ArithmeticException is a [@RuntimeException#Organization*] so it doesnt need to be declared in a throws clause or caught by a catch block But Exception isnt a [$RuntimeException#Organization*] Section of the JLS covers this The unchecked exception classes are exempted from compiletime checking The unchecked exception classes include Errors and [$RuntimeException#Organization*]s Additionally youll want to check if y is not if x y is
A: You need to add a throws in the method signature only for checked exceptions For example public static void dividedouble x double y throws Exception Since ArithmeticException extends [$RuntimeException#Organization*] theres no need of a throws in the second example More info Unchecked Exceptions
A: Methods that throw exceptions in Java must delcare it in the method signature public static void dividedouble x double y throws Exception Without the declaration your code will not compile There is a special subset of exceptions that extend the [$RuntimeException#Organization*] class These exceptions do not need to be declared in the method signature ArithmeticException extends a RuntimeException
A: The first thing of solving that problem is to find which part of your code generates this null value then try to understand the following code in c which was very useful for me to avoid the null value by checking the retrieve code if it will read me null or not just like ifcmdExecuteScalar null MessageBoxShowdata is null else put ur code here Also do not forget to use try catch block
A: Your issue is in using xbind to bind the name property your name will always be null since you are not setting any valueso the binding fails what you can do is edit you list view template like ListView ItemsSourcexBind Pathperson Margin LoadedListViewLoaded ListViewItemTemplate DataTemplate xDataTypelocalPerson TextBlock TextBinding Name ForegroundRedTextBlock DataTemplate ListViewItemTemplate ListView and inside the code while you are creating a person set the name public Personstring v string v thisv v thisv v thisname vset name as v
A: You have to figure out from where you are getting the null value and place the code in the try catch block and write the catch block for SystemArgumentNullException try enter code here your code enter code here catch ArgumentNullException ex enter code here code specifically for a ArgumentNullException
A: Update Joyent now has their own guide The following information is more of a summary Safely throwing errors Ideally wed like to avoid uncaught errors as much as possible as such instead of literally throwing the error we can instead safely throw the error using one of the following methods depending on our code architecture For synchronous code if an error happens return the error Define divider as a syncrhonous function var divideSync functionxy if error condition if y throw the error safely by returning it return new ErrorCant divide by zero else no error occured continue on return xy Divide var result divideSync did an error occur if result instanceof Error handle the error safely consolelogerr result else no error occured continue on consolelogresult Divide result divideSync did an error occur if result instanceof Error handle the error safely consolelogerr result else no error occured continue on consolelogresult For callbackbased ie asynchronous code the first argument of the callback is err if an error happens err is the error if an error doesnt happen then err is null Any other arguments follow the err argument var divide functionxynext if error condition if y throw the error safely by calling the completion callback with the first argument being the error nextnew ErrorCant divide by zero else no error occured continue on nextnull xy dividefunctionerrresult did an error occur if err handle the error safely consolelogerr err else no error occured continue on consolelogresult dividefunctionerrresult did an error occur if err handle the error safely consolelogerr err else no error occured continue on consolelogresult For eventful code where the error may happen anywhere instead of throwing the error fire the error event instead Definite our Divider Event Emitter var events requireevents var Divider function eventsEventEmittercallthis requireutilinheritsDivider eventsEventEmitter Add the divide function Dividerprototypedivide functionxy if error condition if y throw the error safely by emitting it var err new ErrorCant divide by zero thisemiterror err else no error occured continue on thisemitdivided x y xy Chain return this Create our divider and listen for errors var divider new Divider divideronerror functionerr handle the error safely consolelogerr dividerondivided functionxyresult consolelogxyresult Divide dividerdividedivide Safely catching errors Sometimes though there may still be code that throws an error somewhere which can lead to an uncaught exception and a potential crash of our application if we dont catch it safely Depending on our code architecture we can use one of the following methods to catch it When we know where the error is occurring we can wrap that section in a nodejs domain var d requiredomaincreate donerror functionerr handle the error safely consolelogerr catch the uncaught errors in this asynchronous or synchronous code block drunfunction the asynchronous or synchronous code that we want to catch thrown errors on var err new Errorexample throw err If we know where the error is occurring is synchronous code and for whatever reason cant use domains perhaps old version of node we can use the try catch statement catch the uncaught errors in this synchronous code block try catch statements only work on synchronous code try the synchronous code that we want to catch thrown errors on var err new Errorexample throw err catch err handle the error safely consolelogerr However be careful not to use trycatch in asynchronous code as an asynchronously thrown error will not be caught try setTimeoutfunction var err new Errorexample throw err catch err Example error wont be caught here crashing our app hence the need for domains If you do want to work with trycatch in conjunction with asynchronous code when running Node or higher you can use asyncawait natively to write your asynchronous functions Another thing to be careful about with trycatch is the risk of wrapping your completion callback inside the try statement like so var divide functionxynext if error condition if y throw the error safely by calling the completion callback with the first argument being the error nextnew ErrorCant divide by zero else no error occured continue on nextnull xy var continueElsewhere functionerr result throw new Errorelsewhere has failed try divide continueElsewhere the execution of divide and the execution of continueElsewhere will be inside the try statement catch err consolelogerrstack will output the unexpected result of elsewhere has failed This gotcha is very easy to do as your code becomes more complex As such it is best to either use domains or to return errors to avoid uncaught exceptions in asynchronous code the try catch catching execution that you dont want it to In languages that allow for proper threading instead of JavaScripts asynchronous eventmachine style this is less of an issue Finally in the case where an uncaught error happens in a place that wasnt wrapped in a domain or a try catch statement we can make our application not crash by using the uncaughtException listener however doing so can put the application in an unknown state catch the uncaught errors that werent wrapped in a domain or try catch statement do not use this in modules but only in applications as otherwise we could have multiple of these bound processonuncaughtException functionerr handle the error safely consolelogerr the asynchronous or synchronous code that emits the otherwise uncaught error var err new Errorexample throw err
A: Following is a summarization and curation from many different sources on this topic including code example and quotes from selected blog posts The complete list of best practices can be found here Best practices of NodeJS error handling Number Use promises for async error handling TLDR Handling async errors in callback style is probably the fastest way to hell aka the pyramid of doom The best gift you can give to your code is using instead a reputable promise library which provides much compact and familiar code syntax like trycatch Otherwise NodeJS callback style functionerr response is a promising way to unmaintainable code due to the mix of error handling with casual code excessive nesting and awkward coding patterns Code example good doWork thendoWork thendoError thendoWork catcherrorHandler thenverify code example anti pattern callback style error handling getDatasomeParameter functionerr result iferr null do something like calling the given callback function and pass the error getMoreDataa functionerr result iferr null do something like calling the given callback function and pass the error getMoreDatab functionc getMoreDatad functione Blog quote We have a problem with promises From the blog pouchdb ranked for the keywords Node Promises And in fact callbacks do something even more sinister they deprive us of the stack which is something we usually take for granted in programming languages Writing code without a stack is a lot like driving a car without a brake pedal you dont realize how badly you need it until you reach for it and its not there The whole point of promises is to give us back the language fundamentals we lost when we went async return throw and the stack But you have to know how to use promises correctly in order to take advantage of them Number Use only the builtin Error object TLDR It pretty common to see code that throws errors as string or as a custom type this complicates the error handling logic and the interoperability between modules Whether you reject a promise throw exception or emit error using NodeJS builtin Error object increases uniformity and prevents loss of error information Otherwise When executing some module being uncertain which type of errors come in return makes it much harder to reason about the coming exception and handle it Even worth using custom types to describe errors might lead to loss of critical error information like the stack trace Code example doing it right throwing an Error from typical function whether sync or async ifproductToAdd throw new ErrorHow can I add new product when no value provided throwing an Error from EventEmitter const myEmitter new MyEmitter myEmitteremiterror new Errorwhoops throwing an Error from a Promise return new promisefunction resolve reject DALgetProductproductToAddidthenexistingProduct ifexistingProduct null return rejectnew ErrorWhy fooling us and trying to add an existing product code example anti pattern throwing a String lacks any stack trace information and other important properties ifproductToAdd throw How can I add new product when no value provided Blog quote A string is not an error From the blog devthought ranked for the keywords NodeJS error object passing a string instead of an error results in reduced interoperability between modules It breaks contracts with APIs that might be performing instanceof Error checks or that want to know more about the error Error objects as well see have very interesting properties in modern JavaScript engines besides holding the message passed to the constructor Number Distinguish operational vs programmer errors TLDR Operations errors eg API received an invalid input refer to known cases where the error impact is fully understood and can be handled thoughtfully On the other hand programmer error eg trying to read undefined variable refers to unknown code failures that dictate to gracefully restart the application Otherwise You may always restart the application when an error appear but why letting online users down because of a minor and predicted error operational error the opposite is also not ideal keeping the application up when unknown issue programmer error occurred might lead unpredicted behavior Differentiating the two allows acting tactfully and applying a balanced approach based on the given context Code example doing it right throwing an Error from typical function whether sync or async ifproductToAdd throw new ErrorHow can I add new product when no value provided throwing an Error from EventEmitter const myEmitter new MyEmitter myEmitteremiterror new Errorwhoops throwing an Error from a Promise return new promisefunction resolve reject DALgetProductproductToAddidthenexistingProduct ifexistingProduct null return rejectnew ErrorWhy fooling us and trying to add an existing product code example marking an error as operational trusted marking an error object as operational var myError new ErrorHow can I add new product when no value provided myErrorisOperational true or if youre using some centralized error factory see other examples at the bullet Use only the builtin Error object function appErrorcommonType description isOperational Errorcallthis ErrorcaptureStackTracethis thiscommonType commonType thisdescription description thisisOperational isOperational throw new appErrorerrorManagementcommonErrorsInvalidInput Describe here what happened true error handling code within middleware processonuncaughtException functionerror iferrorisOperational processexit Blog Quote Otherwise you risk the state From the blog debugable ranked for the keywords NodeJS uncaught exception By the very nature of how throw works in JavaScript there is almost never any way to safely pick up where you left off without leaking references or creating some other sort of undefined brittle state The safest way to respond to a thrown error is to shut down the process Of course in a normal web server you might have many connections open and it is not reasonable to abruptly shut those down because an error was triggered by someone else The better approach is to send an error response to the request that triggered the error while letting the others finish in their normal time and stop listening for new requests in that worker Number Handle errors centrally through but not within middleware TLDR Error handling logic such as mail to admin and logging should be encapsulated in a dedicated and centralized object that all endpoints eg Express middleware cron jobs unittesting call when an error comes in Otherwise Not handling errors within a single place will lead to code duplication and probably to errors that are handled improperly Code example a typical error flow DAL layer we dont handle errors here DBaddDocumentnewCustomer error result if error throw new ErrorGreat error explanation comes here other useful parameters API route code we catch both sync and async errors and forward to the middleware try customerServiceaddNewreqbodythenfunction result resstatusjsonresult catcherror nexterror catch error nexterror Error handling middleware we delegate the handling to the centrzlied error handler appusefunction err req res next errorHandlerhandleErrorerrthenisOperationalError if isOperationalError nexterr Blog quote Sometimes lower levels cant do anything useful except propagate the error to their caller From the blog Joyent ranked for the keywords NodeJS error handling You may end up handling the same error at several levels of the stack This happens when lower levels cant do anything useful except propagate the error to their caller which propagates the error to its caller and so on Often only the toplevel caller knows what the appropriate response is whether thats to retry the operation report an error to the user or something else But that doesnt mean you should try to report all errors to a single toplevel callback because that callback itself cant know in what context the error occurred Number Document API errors using Swagger TLDR Let your API callers know which errors might come in return so they can handle these thoughtfully without crashing This is usually done with REST API documentation frameworks like Swagger Otherwise An API client might decide to crash and restart only because he received back an error he couldnt understand Note the caller of your API might be you very typical in a microservices environment Blog quote You have to tell your callers what errors can happen From the blog Joyent ranked for the keywords NodeJS logging Weve talked about how to handle errors but when youre writing a new function how do you deliver errors to the code that called your function If you dont know what errors can happen or dont know what they mean then your program cannot be correct except by accident So if youre writing a new function you have to tell your callers what errors can happen and what they mea Number Shut the process gracefully when a stranger comes to town TLDR When an unknown error occurs a developer error see best practice number there is uncertainty about the application healthiness A common practice suggests restarting the process carefully using a restarter tool like Forever and PM Otherwise When an unfamiliar exception is caught some object might be in a faulty state eg an event emitter which is used globally and not firing events anymore due to some internal failure and all future requests might fail or behave crazily Code example deciding whether to crash deciding whether to crash when an uncaught exception arrives Assuming developers mark known operational errors with errorisOperationaltrue read best practice processonuncaughtException functionerror errorManagementhandlerhandleErrorerror iferrorManagementhandlerisTrustedErrorerror processexit centralized error handler encapsulates errorhandling related logic function errorHandler thishandleError function error return loggerlogErrorerrthensendMailToAdminIfCriticalthensaveInOpsQueueIfCriticalthendetermineIfOperationalError thisisTrustedError functionerror return errorisOperational Blog quote There are three schools of thoughts on error handling From the blog jsrecipes There are primarily three schools of thoughts on error handling Let the application crash and restart it Handle all possible errors and never crash Balanced approach between the two Number Use a mature logger to increase errors visibility TLDR A set of mature logging tools like Winston Bunyan or LogJ will speedup error discovery and understanding So forget about consolelog Otherwise Skimming through consolelogs or manually through messy text file without querying tools or a decent log viewer might keep you busy at work until late Code example Winston logger in action your centralized logger object var logger new winstonLogger level info transports new winstontransportsConsole new winstontransportsFile filename somefilelog custom code somewhere using the logger loggerloginfo Test Log Message with some parameter s some parameter anything This is metadata Blog quote Lets identify a few requirements for a logger From the blog strongblog Lets identify a few requirements for a logger Time stamp each log line This one is pretty self explanatory you should be able to tell when each log entry occured Logging format should be easily digestible by humans as well as machines Allows for multiple configurable destination streams For example you might be writing trace logs to one file but when an error is encountered write to the same file then into error file and send an email at the same time Number Discover errors and downtime using APM products TLDR Monitoring and performance products aka APM proactively gauge your codebase or API so they can automagically highlight errors crashes and slow parts that you were missing Otherwise You might spend great effort on measuring API performance and downtimes probably youll never be aware which are your slowest code parts under real world scenario and how these affects the UX Blog quote APM products segments From the blog Yoni Goldberg APM products constitutes major segments Website or API monitoring external services that constantly monitor uptime and performance via HTTP requests Can be setup in few minutes Following are few selected contenders Pingdom Uptime Robot and New Relic Code instrumentation products family which require to embed an agent within the application to benefit feature slow code detection exceptions statistics performance monitoring and many more Following are few selected contenders New Relic App Dynamics Operational intelligence dashboard these line of products are focused on facilitating the ops team with metrics and curated content that helps to easily stay on top of application performance This is usually involves aggregating multiple sources of information application logs DB logs servers log etc and upfront dashboard design work Following are few selected contenders Datadog Splunk The above is a shortened version see here more best practices and examples
A: Theres a much easier solution now in a similar question but it is about string For DateTime SqlMapperAddTypeMaptypeofDateTime SystemDataDbTypeDateTime This must be applied before any database call like INSERT You can put it in your Main or Startup class or any place that runs on Startup to configure data access SqlMapper is a static class and changes apply to all calls
A: You can catch uncaught exceptions but its of limited use See httpdebuggablecompostsnodejsdealingwithuncaughtexceptionscdcdeecbddcb monit forever or upstart can be used to restart node process when it crashes A graceful shutdown is best you can hope for eg save all inmemory data in uncaught exception handler
A: Dapper is litterally a single file that you include into your code base Just edit the file Replace around line typeMaptypeofGuid DbTypeGuid typeMaptypeofDateTime DbTypeDateTime typeMaptypeofDateTimeOffset DbTypeDateTimeOffset typeMaptypeofbyte DbTypeBinary With typeMaptypeofGuid DbTypeGuid typeMaptypeofDateTime DbTypeDateTime typeMaptypeofDateTimeOffset DbTypeDateTimeOffset typeMaptypeofbyte DbTypeBinary Edit Theres also a nullable DateTime further down that block of mappings around line typeMaptypeofDateTime DbTypeDateTime typeMaptypeofDateTimeOffset DbTypeDateTimeOffset To typeMaptypeofDateTime DbTypeDateTime typeMaptypeofDateTimeOffset DbTypeDateTimeOffset
A: For Date and time data with time zone awareness SqlMapperAddTypeMaptypeofDateTime SystemDataDbTypeDateTimeOffset I do not know why when I tried to use Datetime I still kept losing the milliseconds This DateTimeOffset type is also Datetime The date value range is from January AD through December AD The time value range is through with an accuracy of nanoseconds Time zone value range is through
A: There are at minimum two things wrong with the playbook you posted hosts is a dict but should not be testhost has a null value Reading the fine manual shows that hosts should be a string or liststr but may not be a dict Perhaps what you are trying to accomplish is best achieved via an inventory file or dynamic inventory pluginscript
A: This error can also happen if you wind up with the wrong structure in your playbook For example tags oops role foomyrole instead of roles role foomyrole
A: I had the same issue in ansible playbook and roles but the issue cause was from tasksmainyaml file remember ansible never guide you to the problem and even makes misunderstanding you should find it yourself
A: Try the following way valueuserInfogetStringemail Does that fix the problem Actually single quotes might cause problems
A: the expression tags means has take semicolon at the end of expression value userInfogetStringemail I hope it will work please try this
A: Try value userInfogetStringemail or value userInfogetStringemail No when you use the expression Also I think you dont need two signs but only the one inside
A: Youre missing nothing as far as I know The specify means the method declaration Perhaps they used code markup to clearly distinguish that both are equivalent code approaches Might be a simple mistake as well Why did the designers decide to force a method to specify all uncaught checked exceptions that can be thrown within its scope Any Exception that can be thrown by a method is part of the methods public programming interface Unchecked exceptions The controversy javadocs
A: Theyre just referring to the catch or specify requirement It looks like they made a formatting error when they put specify in the monospaced font
A: If a method chooses not to catch an exception the method must specify that it can throw that exception Why did the Java designers make this requirement Because any exception that can be thrown by a method is really part of the methods public programming interface callers of a method must know about the exceptions that a method can throw in order to intelligently and consciously decide what to do about those exceptions Thus in the method signature you specify the exceptions that the method can throw as seen herehttpjournalsecssotonacukjavatutorialjavaexceptionscatchOrDeclarehtml And specify is not a keyword httpenwikipediaorgwikiListofJavakeywords theyre just talking about specifying the exceptions a method will throw in the method declaration
A: A migration occurred due to vulnerability CVE In the event that you get an error like the following This method cannot decide whether these patterns are Spring MVC patterns or not If this endpoint is a Spring MVC endpoint please use requestMatchersMvcRequestMatcher otherwise please use requestMatchersAntPathRequestMatcher You should use a complete RequestMatcher For example if an application has a servlet deployed to myservlet and is authorizing that traffic like so Bean SecurityFilterChain appSecurityHttpSecurity http throws Exception http authorizeHttpRequestsauthorize authorize requestMatchersmyservlethasRoleUSER requestMatchersspringmvccontrollerhasRoleUSER anyRequestauthenticated return httpbuild then the application should instead do the following import static orgspringframeworksecuritywebutilmatcherAntPathRequestMatcherantMatcher Bean MvcRequestMatcherBuilder mvcHandlerMappingIntrospector introspector return new MvcRequestMatcherBuilderintrospector Bean SecurityFilterChain appSecurityHttpSecurity http MvcRequestMatcherBuilder mvc throws Exception http authorizeHttpRequestsauthorize authorize requestMatchersantMatchermyservlethasRoleUSER requestMatchersmvcpatternspringmvccontrollerhasRoleUSER anyRequestauthenticated return httpbuild For more details read this repository offered by Spring cvemitigations
A: For now there are two options recommended by httpsspringiosecuritycve First Option Did a small very simple poc war web application in tomcat Debugged this method orgspringframeworksecurityconfigannotationwebAbstractRequestMatcherRegistryrequestMatchersHttpMethod method String patterns Studied httpsspringiosecuritycve Just before the below lines in above mentioned method I examined what was in the registrations object AssertisTrueregistrationssize This method cannot decide whether these patterns are Spring MVC patterns or not If this endpoint is a Spring MVC endpoint please use requestMatchersMvcRequestMatcher otherwise please use requestMatchersAntPathRequestMatcher Found it to be registrations of orgapachecatalinaservletsDefaultServlet against default orgapachejasperservletJspServlet against jsp orgspringframeworkwebservletDispatcherServlet against dispatcher In httpsspringiosecuritycve they mention Sometimes these extra servlets are not needed For example some servlet containers will add a DefaultServlet that DispatcherServlet effectively replaces In many cases such a servlet can be removed from your containers global configuration What they are saying is that we should edit apachetomcatconfwebxml We should comment out the registrations in that webxml for orgapachecatalinaservletsDefaultServlet orgapachejasperservletJspServlet We should also remove the mapping entries in same webxml For other servlet containers we can consider similar concepts Second Option The other option is to do what they also suggested in For an example mitigation please see the following Spring Security sample application and the corresponding diff httpsspringiosecuritycve namely follow httpsgithubcomspringprojectsspringsecuritysamplescommitebecadbeaeacdbd In other words the example they give is Replace requestMatcherslogin resourcespermitAll with requestMatchersmvcpatternlogin mvcpatternresourcespermitAll In a web application you would usually use mvc matcher as shown here You can also use ant matcher there is a little risk in using ant matchers as explained here Difference between antMatcher and mvcMatcher Using ant matcher is best avoided unless you are willing to do necessary testing if you start using it In complex scenarios can use regexmatchers also use it only if needed not in this scenario where you just want to solve this current issue Regarding how to achieve mvcpattern itself here are the steps Declare a bean as below somewhere Bean MvcRequestMatcherBuilder mvcHandlerMappingIntrospector introspector return new MvcRequestMatcherBuilderintrospector In your security configurations just autowire it like so Autowired MvcRequestMatcherBuilder mvc Decision Point If you want to retain original code try editing the servers not projects webxmlor similar configuration if not tomcat but some other servlet container to eliminate the extra servlets that come by default in servlet containers If you are willing to change code try the second option Also Note Sometimes if its legacy code and you are using DispatcherServlet methods in your code you will have to eliminate that to use first option or else settle for second option Hope this helps Adding more new information In fact if you further migrate from springbootstarterparent to springbootstarterparent the messages are even clearer It says the problem there is more than one mappable servlet in your servlet context orgapachejasperservletJspServletjspx jsp orgspringframeworkwebservletDispatcherServlet And that is why following httpsspringiosecuritycve one option is to just disable the default and jsp related servlets Useful if you dont want to change code but are fine with changing server configuration The second option if you go the code change route was always clearly logged For each MvcRequestMatcher call MvcRequestMatchersetServletPath to indicate the servlet path Only as otherwise they mention AntMatchers I will repeat avoid AntMatcher because of its dangers when using web applications for this migration purpose if you go for second option
A: There is small configuration which will prevent us from This method cannot decide whether these patterns are Spring MVC patterns or not If this endpoint is a Spring MVC endpoint please use requestMatchersMvcRequestMatcher otherwise please use requestMatchersAntPathRequestMatcher error It is clearly mentoined at Configuration Migrations If you are having problem with the new requestMatchers methods you can always switch back to the RequestMatcher implementation that you were using For example if you still want to use AntPathRequestMatcher and RegexRequestMatcher implementations you can use the requestMatchers method that accepts a RequestMatcher instance Okay In the context of your issue mentoined in the code above you should try to add antMatcherpattern as parameter to requestMatchers as shown below Bean public SecurityFilterChain filterChainHttpSecurity http throws Exception return httpcsrfcsrf csrfdisable authorizeHttpRequestsauth authanyRequestauthenticated authrequestMatchersantMatcherauthpermitAll authanyRequestauthenticated httpBasicandbuild Hope it will solve your issue
A: lets understand the problem better the problem you are referring to is not a laravel problem this is a php problem the exception raised is ErrorException because most probably you are trying to access a property of null this has nothing to do with laravel the magic get method get that laravel uses to resolve properties and relations already handles if the property or the relation doesnt exist it returns null so when you use invoicecompany you have to know that company is an eloquent object so when you do company it will call the get method and it will return null and there is no problem so far but once you do invoicecompanyname now invoicecompany is null not an eloquent object anymore so when you do name there is no calls for get or anything because there is no object so what you can do is to benefit from laravel default relation by defining default model for the relations httpslaravelcomdocsxeloquentrelationshipsdefaultmodels so instead of laravel returning null when the relation is not defined it will return a default eloquent model where it can handle that a child property is not set Get the author of the post public function user BelongsTo return thisbelongsToUserclasswithDefault name Guest Author Get the author of the post public function user BelongsTo return thisbelongsToUserclasswithDefaultfunction User user Post post username Guest Author
A: if your php you can use the null safe operator httpsphpwatchversionsnullsafeoperator invoicecompanybankamount
A: There are a few steps to help with your problem Create a custom exception that will be thrown when you encounter the error Trying to get property of nonobject This exception will then be caught and handled in your custom exception handler namespace AppExceptions use Exception class NonObjectPropertyException extends Exception Customize Laravels exception handling to catch the NonObjectPropertyException and return the default value NA instead of throwing an error To do this you can modify the render method in the appExceptionsHandlerphp file appExceptionsHandlerphp use AppExceptionsNonObjectPropertyException public function renderrequest Exception exception if exception instanceof NonObjectPropertyException return responseviewerrorsnonobjectproperty return parentrenderrequest exception Create a view that will display the default value NA in this case when the exception is caught To implement this behavior globally modify the base model that other models extend You can create a method in the base model that will handle attribute access for related models and throw the NonObjectPropertyException if the relation does not exist appModelsBaseModelphp namespace AppModels use IlluminateDatabaseEloquentModel use AppExceptionsNonObjectPropertyException class BaseModel extends Model public function getkey try return parentgetkey catch Exception e throw new NonObjectPropertyException
A: ArgumentException looks the most correct to me in this instance though is not defined in the BCL There is a specialized exception for enum arguments InvalidEnumArgumentException The exception thrown when using invalid arguments that are enumerators An alternative is ArgumentOutOfRangeException The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method The logic for using these is that the passed in argument value is not valid as far as someFunc is concerned
A: Id throw the InvalidEnumArgumentException as it will give more detailed information in this case you are checking on an enum
A: Since you have the login in a function you can throw InvalidArgumentException The exception that is raised when a parameter that is not valid is passed to a method on the referenced connection to the server EDIT A better alternative would be ArgumentException since InvalidArgumentException in MicrosoftSqlServerManagementCommon namespace Something like throw new ArgumentExceptionUnhandled value valueToString
A: The key is to write a custom appender You dont say which unit testing framework you use but for JUnit I needed to do something similar it was a little more complex than just all errors but basically the same concept and created a JUnit Rule that added my appender and the appender fails the test as needed I place my code for this answer in the public domain import chqoslogbackclassicLevel import chqoslogbackclassicLogger import chqoslogbackclassicLoggerContext import chqoslogbackclassicspiILoggingEvent import chqoslogbackcoreAppenderBase import orgjunitrulesExternalResource import orgslfjLoggerFactory import static orgjunitAssertfail A JUnit link orgjunitRule which attaches itself to Logback and fails the test if an error is logged Designed for use in some tests as if the system would log an error that indicates that something went wrong even though the error was correctly caught and logged public class FailOnErrorLogged extends ExternalResource private FailOnErrorAppender appender Override protected void before throws Throwable superbefore final LoggerContext loggerContext LoggerContextLoggerFactorygetILoggerFactory final Logger rootLogger LoggerLoggerFactorygetLoggerLoggerROOTLOGGERNAME appender new FailOnErrorAppender appendersetContextloggerContext appenderstart rootLoggeraddAppenderappender Override protected void after appenderstop final Logger rootLogger LoggerLoggerFactorygetLoggerLoggerROOTLOGGERNAME rootLoggerdetachAppenderappender superafter private static class FailOnErrorAppender extends AppenderBaseILoggingEvent Override protected void appendfinal ILoggingEvent eventObject if eventObjectgetLevelisGreaterOrEqualLevelERROR failError logged eventObjectgetFormattedMessage An example of usage import orgjunitRule import orgjunitTest import orgslfjLogger import orgslfjLoggerFactory public class ExampleTest private static final Logger log LoggerFactorygetLoggerExampleTestclass Rule public FailOnErrorLogged failOnErrorLogged new FailOnErrorLogged Test public void testError logerrorTest Error Test public void testInfo loginfoTest Info The testError method fails and the testInfo method passes It works the same if the test calls the real classundertest that logs an error as well
A: Logging frameworks are generally designed not to throw any exceptions to the user Another option in addition to Raedwalds answer would be to create a custom appender that sets a static boolean flag to true when an ERROR message is logged reset this flag in a setup method and check it in a teardown method or create a JUnit rule to resetcheck the flag
A: So you want to fail your test case if any error reporting message of the logger is called Use dependency injection to associate the code to be tested with the logger it should use Implement a test double that implements the SLFJ logger interface and which does nothing for most methods but throws an AssertionError for the error logging methods In the setup part of the test case inject the test double
A: You will need to decorate your code with trycatch try code logic goes here catchException ex handle exception here exMessage this will give you string description of the exception exInnerException this will provide you more details when you debug and have a break point in the exception section then you can view more details on the exception I hope this helps
A: You cant catch this exception it is just logged See for example source code In vs you can set a functional breakpoint and load the symbols where needed Then you can set more breakpoints where needed
A: You can try using the ILogger from the MicrosoftExtensionsLogging using the LogError Method You will need to set the Log to output where you prefer in the link bellow you can see the basic settings httpslearnmicrosoftcomenusaspnetcorefundamentalsloggingviewaspnetcore In addition if possible to debug you can just enable more Exception setting while debugging At the bottom of the Visual Studio this tab will appear just enabled more options until a more specific exception appears
A: Well catchException ex is just the same as catchException with one difference only in catchException ex we have an access to the exception class error cause instance Usually you need an exception class instance to print out the original message try catch AppServerException e ConsoleWriteLineApplication server failed to get data with the message ConsoleWriteLineeMessage Whats actually got wrong with it If you dont need the exception class instance eg you plan just to consume the exception the catchException ex syntax is excessive and catchException is prefferable try c a b catch DivideByZeroException c IntMaxValue in case b let c be the maximum possible int Finally Do not catch a general Exception class without rethrowing try int c a b catch Exception Never ever do this ConsoleWriteLineOh NO Do you really want to code whatever error green fume from CPU included had happened just print out Oh No and continue The pattern with Exception class is something like this tranStart try tranCommit catch Exception Whatever had happened lets first rollback the database transaction tranRollback ConsoleWriteLineOh NO throw rethrow the exception
A: Its quite simple in the first code you can catch the exception and get the object representing it so you can have more information about what happened in the second code you only know that an exception has been raised but you dont have more information about it What to use actually depends on how much information you want to have about the exception raised
A: If you need to use the exception inside the catch block give Exception a name otherwise keep it anonymous There are situations when the catch block needs to do more than simply show exceptions message For example when you catch applicationspecific exceptions you may be able to examine additional elements of the exception object Here is a hypothetical example catch ConnectToServerException cse MessageBoxShowstringFormat Connection to server failed Use a name from the following list cseAttemptedConnectionServerName stringJoin cseAllowedServerNames The above code assumes that the custom exception ConnectToServerException has a property called AttemptedConnectionServerName with the name of the server to which you tried to connect and an enumeration property AllowedServerNames with the names of available servers There are also situations when all you need to know is that an exception of a particular type just happened In this case you do not need to provide a named variable for it
A: You have two ways Write code such that it isnt needed to call ClassService from StudentService or StudentService from ClassService Create third class public class StudentService IStudentService private readonly IClassSharedSerive classSharedService public class ClassService IClassService private readonly IClassSharedSerive classSharedService private readonly IStudentService studentService public class ClassSharedService IClassSharesService without references to IClassService and IStudentService But in most cases it is needed to write correctly StudentService and ClassService way
A: Im not completely sure that the way I went around this is very clean but it works just fine for me When I hit that circular dependency problem I removed the service from the Dependency Injection and I simply passed the service as a parameter to the function that needed it So when you call the method it looks like this Inside the Student service var result classServiceGetClassStudentsclassId this Might not work for everyone but in my case I had a pretty simple setup so I didnt dig deeper Hope this helps
A: So I dont believe that services should have other services injected I think that each service should be able to stand on its own and provide just the data that it is responsible for The consumer of the IStudentService can also be a consumer of the IClassService if it needs data from both sources
A: Step Create a custom Exception php artisan makeexception CustomException Step Include that exception in your code use AppExceptionsCustomException Pass your error to that Exception ifsomethingerror throw new CustomExceptionYour error message Step Handle your exception in CustomException file in report and render methods For example if I want display the error as JSON format php namespace AppExceptions use Exception class CustomException extends Exception public function renderrequest return responsejsonerror true message thisgetMessage
A: Laravel calls the render function of AppExceptionsHandler class So overriding it will not work You have to add it in AppExceptionsHandler class only For example php namespace AppExceptions use Exception use IlluminateAuthAuthenticationException use AppProjectFrontendRepoVehicleEloquentVehicle use IlluminateFoundationExceptionsHandler as ExceptionHandler class Handler extends ExceptionHandler A list of the exception types that should not be reported var array protected dontReport IlluminateAuthAuthenticationExceptionclass IlluminateAuthAccessAuthorizationExceptionclass SymfonyComponentHttpKernelExceptionHttpExceptionclass IlluminateDatabaseEloquentModelNotFoundExceptionclass IlluminateSessionTokenMismatchExceptionclass IlluminateValidationValidationExceptionclass Report or log an exception This is a great spot to send exceptions to Sentry Bugsnag etc param Exception exception return void public function reportException exception parentreportexception Render an exception into an HTTP response param IlluminateHttpRequest request param Exception exception return IlluminateHttpResponse public function renderrequest Exception exception ifexception instanceof CustomException return thisshowCustomErrorPage return parentrenderrequest exception protected function showCustomErrorPage recentlyAdded appEloquentVehicleclassfetchLatestVehicles return viewmakeerrorsCustomwithrecentlyAdded recentlyAdded
A: In new versions of Laravel you can create a custom handler using this command php artisan makeexception CustomException Then you should call these methods report render inside your custom handler and they will override the existing ones in the AppExceptionsHandler report used if you want to log the errors render used if you want to redirect back with error or return HTTP response like your own Blade file or if youre building an API For more information you can check Laravel documentation
A: After struggling for two day I finally got the solution You need to add the SHA from your Google Play Console Dashboard Go to Release ManagementApp Signing Add this SHA in firebase console This works only in release apk version Update This is because I enabled Google Play App Signing while uploading the app for the first time
A: In the googleservicesjson there are two clients types at least in my case my error was that I was copying the wrong webid from clientid type and below theres another clientid which type is and thats the correct one
A: Please make sure that the string from Rstringdefaultwebclientid is the Web API Key from Firebase Project Settings
A: Change this String jsonsDataString responsetoString Error toString of Response is assigned to jsonDataString data jsonDecodejsonsDataString printdatatoString To this String jsonsDataString responsebodytoString toString of Responses body is assigned to jsonDataString data jsonDecodejsonsDataString printdatatoString I hope this helps in case of any doubt please comment
A: This same problem occurred to me but for a different reason As it is a very common problem I think mentioning it here will help other people who came for a solution searching for the same problem I was passing a Map of JSON where String was required so I did this jsonencodevariableWithMapData and my problem was solved
A: oh i found this case so that ill make use to convert enter into string response like this String responseapi responsebodytoStringreplaceAlln data jsonDecoderesponseapi printdata thank you very much for my friend who helped me
A: I had the same error using Hanfire and Azure SQL This error happened after I migrated to a new version To solve the problem I had to delete all hangfire tables and reinstall Hope it helps
A: There is a new way to apply or override query hints with the Query Store Hints feature but thats brand new and currently only available on Azure SQL Database which is always the latest codebase But other than that theres a matching hangfire issue on GitHub that has some troubleshooting tips
A: Quite old post but may be helpful We need to recreate the Job indexes SET ANSIPADDING ON GO Object Index CXHangFireCounter Script Date PM CREATE CLUSTERED INDEX CXHangFireCounter ON HangFireCounter Key ASC WITH PADINDEX OFF STATISTICSNORECOMPUTE OFF SORTINTEMPDB OFF DROPEXISTING OFF ONLINE OFF ALLOWROWLOCKS ON ALLOWPAGELOCKS ON ON PRIMARY GO SET ANSIPADDING ON GO Object Index IXHangFireJobStateName Script Date PM CREATE NONCLUSTERED INDEX IXHangFireJobStateName ON HangFireJob StateName ASC WHERE StateName IS NOT NULL WITH PADINDEX OFF STATISTICSNORECOMPUTE OFF SORTINTEMPDB OFF DROPEXISTING OFF ONLINE OFF ALLOWROWLOCKS ON ALLOWPAGELOCKS ON ON PRIMARY GO Object Index IXHangFireJobExpireAt Script Date PM CREATE NONCLUSTERED INDEX IXHangFireJobExpireAt ON HangFireJob ExpireAt ASC INCLUDEStateName WHERE ExpireAt IS NOT NULL WITH PADINDEX OFF STATISTICSNORECOMPUTE OFF SORTINTEMPDB OFF DROPEXISTING OFF ONLINE OFF ALLOWROWLOCKS ON ALLOWPAGELOCKS ON ON PRIMARY GO
A: However how too diagnose the cause of the exception after catching it You cannot The stack has already been unwound at the point of the catch If you want to diagnose reasons for a throw youll need to include them in the exception at the point of the throw this could include a full stack trace if you were so inclined but that would be systemdependent Other things you might want to consider a add more precondition checks at the call sites of API calls where you cant modify the code in the call b add precondition checks asserts or throws in functions and methods that you control You can remove them in a release build if performance is an issue c include the full reason for the throw in the message of thrown exceptions
A: I have never used it myself but might worth taking a look at it httpswwwcodeprojectcomarticleswalkingthecallstack Especially at the paragraph Displaying the callstack of an exception With this StackWalker you can also display the callstack inside an exception handler You only need to write a filterfunction which does the stackwalking
A: If you are working with your own exceptions then my libexcept library may be useful to you This library offers a few class The base class is capable of collecting a stack trace at the time it gets instantiated of the time this gives you all the information you need to debug the issue When you just know where the exception occurred but not how it was called it can be much more difficult to kow how to fix the problem Yeah Because the same function may be called in different ways so just knowing exactly which exception occurred is often not enough In a project where you throw exceptions only when something really bad happens this can even be kept in your release version Then you can log the stack traces in your clients logs and make it hundred of times easier to debug remoteend client crashes I have a binary precompiled version for Ubuntu on Launchpad install the PPA in your apt lists and then install libexceptxenialamddeb or whatever version is current To use derive from one of the two classes offered class myexception public libexceptlogicexceptiont And in your catch you can print the stack trace using the getstacktrace to get a vector of strings In our case we actually send that to our logs try throw myexceptionwhat happened catchmyexception const e stacktracet const stackegetstacktrace forauto s stack SNAPLOGERRORs Obviously you probably will want to have a function if you are to log the stack trace in many places For exceptions that you do not generate though you just cant really do much However you can rethrow with your own exception if you want to write a wrapper so as to at least narrow the location where the exceptions are coming from Say you are using a rd party library and expect library to throw once in a while try libraryfunc may throw catchlibraryexception const e throw myexceptionewhat converted exception Now you at least have a stack trace from this low level catch
A: In case anyone faces this problem in the future just like I did and stumbled upon this thread I share my scenario and how it was solved Scenario We Squashed and merged a huge branch with integration branch which resulted in the top commit on integration branch to be a huge one over files changed Once integration had this huge commit on top we were blocked from checking out to it We got the same error like mentioned in this thread and if we used command lineother git control to checkout to integration we got this error also when we tried to create new branches from it This error happened on all our devices and on VS VS Solution Use git commands another git control to checkout to the branch resulting in this problem Commit and push a small commit message It should go back to normal
A: Using git checkout from the command line worked for me More specifically git checkout commit b temp where commit is the commit id What this did is create a branch named temp similarly to how it would be done using the IDE I have no idea why this error occurs for me but while looking at similar issues I noticed that people managed to get around using git commands from the command line It worked fine enough here
A: Its due to overload of commits cache in local since its specific to Visual Studio Option use git bash git checkout Option Take a local repo backup delete it and clone it one more time
A: I was creating a ManyToOne and OneToMany relationship I added JsonIgnore above the ManyToOne and it solved the error
A: This error is a symptom of some other problem not the root cause youre looking for This error explains why the user cant be redirected to the error page Reason the server has already flushed part of the response buffer back to the client its too late to switchredirect to the error page As the error message points out check elsewhere in your Apache Tomcat logs or debug your app another way to find what is throwing an exception
A: I solved this error by adding jsonIgnore to all getters for a List of another object
A: For me the error is regarding db privilege mysqldump Got error Access denied for user myuser to database mydb when doing LOCK TABLES You have to uncheck the locktables option from the Advanced Options available in the top right of the data exporter in MySQL Workbench If youre using command to export then add locktablesFALSE flag
A: If you only want to migrate your DB Structure Open workbench select the connection of your local DB On the left in the navigator panel choose administration Data Export select the schema you want to export on the right side of the window you should find a select box switch Dump Structure and Data to Dump Data only In the same way select Dump Data only when you will import it Honestly I dont know exactly how it solved the error UnboundLocalError local variable pwd referenced before assignment but just moving the Structure without the data worked for me
A: Go to CUsersUserNameAppDataRoamingMySQLWorkbenchsqlworkspaces and delete the workspace of the server where you are getting error or in easy way you can delete all folders in sqlworkspaces
A: You have to define which type of exception you want to catch So write except Exception e instead of except e for a general exception that will be logged anyway Other possibility is to write your whole tryexcept code this way try with openfilepathrb as f constorbinarySTOR filepath f loggerinfoFile successfully uploaded to s FTPADDR except Exception e work on python x loggererrorFailed to upload to ftp s e in Python x and modern versions of Python x use except Exception as e instead of except Exception e try with openfilepathrb as f constorbinarySTOR filepath f loggerinfoFile successfully uploaded to FTPADDR except Exception as e work on python x loggererrorFailed to upload to ftp s e
A: The syntax is no longer supported in python Use the following instead try dosomething except BaseException as e loggererrorFailed to do something stre
A: If you want the error class error message and stack trace use sysexcinfo Minimal working code with some formatting import sys import traceback try ans except BaseException as ex Get current system exception extype exvalue extraceback sysexcinfo Extract unformatter stack traces as tuples traceback tracebackextracttbextraceback Format stacktrace stacktrace list for trace in traceback stacktraceappendFile s Line d FuncName s Message s trace trace trace trace printException type s extypename printException message s exvalue printStack trace s stacktrace Which gives the following output Exception type ZeroDivisionError Exception message division by zero Stack trace File testpy Line FuncName module Message ans The function sysexcinfo gives you details about the most recent exception It returns a tuple of type value traceback traceback is an instance of traceback object You can format the trace with the methods provided More can be found in the traceback documentation
A: Andrew Grants answer does not help getting a stack trace of the throwing function at least not with GCC because a throw statement does not save the current stack trace on its own and the catch handler wont have access to the stack trace at that point any more The only way using GCC to solve this is to make sure to generate a stack trace at the point of the throw instruction and save that with the exception object This method requires of course that every code that throws an exception uses that particular Exception class Update July For some helpful code take a look at cahit beyazs answer which points to httpstacktracesourceforgenet I havent used it yet but it looks promising Update July Stack trace libraries as of July C stacktrace C will introduce stacktrace which some standard library implementations already support or partially support boost stacktrace Reference implementation for stacktrace proposed by the authors It is featurefull but requires various configuration and dependencies backwardcpp A widely used library and provides a lot of information including code snippets for each frame Depending on your system it has various configuration and dependencies It supports most platforms other than mingw cpptrace A newer C stack trace library which supports all major platforms and automatically configures itself based on the host system
A: It depends which platform On GCC its pretty trivial see this post for more details On MSVC then you can use the StackWalker library that handles all of the underlying API calls needed for Windows Youll have to figure out the best way to integrate this functionality into your app but the amount of code you need to write should be minimal
A: If you are using Boost or higher you can use booststacktrace include booststacktracehpp somewhere inside the barint function that is called recursively stdcout booststacktracestacktrace
A: I may not know much about prisma env setup on a nextjs with nextauth but I had a similar problem only without prisma in it if your using a custom path for lets say signing in eg authsignIn then you have to configure it to your NEXTAUTHURL production environment variables using vercel env add What i did since i was using next auth with a custom sign in page i had to setup the nextjs environment variables of NEXTAUTHURL to match the path for the deployed vercel project as httpsyoururlvercelappyourbasepath Then i also had to add a NEXTAUTHSECRET also to my environment variables The last thing was to add the path on my SessionProvider component as import SessionProvider from nextauthreact function NextAuthProvider children return SessionProvider basePathapiauth children SessionProvider I hope you find this helpful
A: I fixed this problem by doing many things but if someone is still struggling with this problem I would suggest you manually run npx prisma generate before deploying check the environment variables and add them to Vercel Environment Variables The problem with my code was with prisma and nothing with nextauth and I was able to find it with removing all of the prisma related code If using mongodb make sure to add the correct IP address
A: In my case I forgot to add NEXTAUTHURL NEXTAUTHSECRET environment variable to vercel NEXTAUTHURLhttpsyourappnamevercelapp NEXTAUTHSECRETGMMqlVJnHNUZjKkSmclRPkZMnkYlsmTXcpaMhxVxfTnUickqq According to NextAuth documentation you dont need NEXTAUTHURL in vercel production Read more about the deployment httpsnextauthjsorgdeployment
A: Catch and check it explicitly try getmycustomerror except ZeroDivisionError as err assert hasattrerr cause and isinstanceerrcause MyCustomError
A: Building off phds answer you can use pytestraises to catch the toplevel MyCustomError exception then inspect the object returned by pytestraisesenter to verify that the chained exception is an instance of ZeroDivisionError with pytestraisesMyCustomError as excinfo getmycustomerror err excinfovalue assert hasattrerr cause assert isinstanceerrcause ZeroDivisionError
A: This works at least on python pytest with pytestraisesZeroDevisionError with pytestraisesMyCustomError getmycustomerror Notice that the order matters It must follow the order how the exception is raised
A: You have enabled Two phase authentication for your Google account and as a result applications will not be able to login to your Google account using the actual password Google expects you to generate a application specific password for each application you use and give it a name and then use that password to login to your Google account from your application This allows you to not give your password to third party application when you have step authentication enabled The alternate way is for your application to support redirecting to a Google page to authenticate using username and password and code generated by the Google Authenticator app The link clearly explains what to do
A: UPDATED TO two steps verification You Must this step to continue login and add a phone number and verify with text messege than will become after greenV press on the Step Verification go down to the end of the list and click on App passwords then in Select App write the name of the app and press Create write a description in the open page and press genarate in the open Genarated App Password copy the created password and use it in your smpt password as usual passwordCheck you dont copy spaces that it How to use it Go to the settings for your Google Account in the application or device you are trying to set up Replace your password with the character password shown above Just like your normal password this app password grants complete access to your Google Account You wont need to remember it so dont write it down or share it with anyone
A: Just create an App Password for your account and use that password Steps to create password Go to your account settings httpsmyaccountgooglecom Security Under signing in to Google App Password Enter your credentials to login to your account Select App and Device Generate Copy and paste the password somewhere You can use this password instead of your account password
A: The Problem is that you have a NullPointerException in your ReportsBean Since the signature of the Quartz execute method is public void executeJobExecutionContext context throws JobExecutionException Quartz can only deal with JobExecutionExceptions that will be thrown within this method But in your case it gets an unexpected NullPointerException To solve this Problem you should remove the cause of the NullPointer From the sourcecode above I couldnt figure out the cause of this exception since it occurs within your ReportsBean Certainly your method ReportsBeancreatePdfCriticalChanges trys to access an uninitialized member
A: at the line String report FacesContextgetCurrentInstancegetExternalContextgetRealPathwebreportscriticalcrjrxml Remember its working out of quartz ReportsBean public void createPdfCriticalChanges throws JRExceptionSQLException Systemoutprintlngenerating report String report FacesContextgetCurrentInstancegetExternalContextgetRealPathwebreportscriticalcrjrxml JasperReport pathjrxml JasperCompileManagercompileReportreport JasperReport pathjrxml JasperCompileManagercompileReportwebreportscriticalcrjrxml Funciona com o inicia Agenda em XML webreportschangetrackercriticalcrjrxml JasperPrint printReport JasperFillManagerfillReportpathjrxml null conngetConn JasperExportManagerexportReportToPdfFileprintReport webreportschangetrackercriticalcrpdf Funciona com o inicia Agenda em XML webreportscriticalcrpdf Systemoutprintlnreport generated
A: its not throws JobExecutionExceptionnb use postController and override method init
A: Please reference the Data Sync Limitations on service and database dimensions I agree with Alberto Morillo your exception should be Unable to process a schema with tables is the max Heres the Azure official blog talk about how to Sync SQL data in large scale using Azure SQL Data Sync It gives you a solution to solve the exception Sync data between databases with many tables Currently data sync can only sync between databases with less than tables You can work around this limitation by creating multiple sync groups using different database users For example you want to sync two databases with tables First you need to define two different users in the database where you load the sync schema from Each user can only see or any number less than tables in the database Sync setup requires ALTER DATABASE permission which implies CONTROL permission over all tables so you will need to explicitly DENY the permissions on tables which you dont want a specific user to see instead of using GRANT You can find the exact privilege needed for sync initialization in the best practice guidance Then you can create two sync groups one for each user Each sync group will sync tables between these two databases Since each user can only see less than tables you will be able to load the schema and create sync groups After the sync group is created and initialized we recommend you follow the best practice guidance to update the user permission and make sure they have the minimum privilege for ongoing sync Hope this helps
A: The full error message you are receiving may look like Getting schema information for the database failed with the exception Unable to process a schema with tables is the max For more information provide tracing ID ddsfaevabeff to customer support It is a current limitation on SQL Data Sync that if the database has more than tables it does not get the schema for you to select the tables even if you want to select and sync only table A workaround for you is to delete the extra tables or move the unneeded tables into another DB Not ideal we agree but is a workaround for now To try the workaround perform the following steps Script the tables you want to syncless than tables per synchronization group Create a new temporary database and run the script to create the tables you want to sync Register and add the new temporary database as a member of the sync group Use the new temporary database to pick the tables you want to sync Add all other databases that you want to sync with onpremise databases and hub database Once the provisioning is done remove the temporary database from the sync group
A: This could be managed using following steps I have used limited tables steps as I was only targeting tables for my requirement If you are looking for limited tables only Create a user at your onprem sql server with limited tables right ie GRANT SELECT ON databasenametablename to username Add multiple tables which needs to be synced Once this is done register this user at SQL Data Sync application at your OnPrem server SQL Data Sync image and select this at your Database Sync Group at Azure Add an OnPremises Database Database Sync Group image Youll be able to see all tables you granted permission at your OnPrem DB If you are looking for all tables Create multiple users with tables each user and create multiple sync groups using these different database users
A: The path that you give to that library call doesnt know or care about your project setup So what you have right now points to the root of your file system For starters you could change to an absolute path
A: Its much better not to use an absolute path but to place a file on the classpath and locate it using class loader InputStream fileIS getClassgetClassLoadergetResourceAsStreammombirthdaytxt StringWriter writer new StringWriter IOUtilscopyfileIS writer encoding String text writertoString
A: public static void readFile try byte bytesInput FileUtilsreadFileToByteArraynew FileCUsersmavensiDesktopcatalinalog byte bytesInput IoUtilsreadBytesnew FileCUsersmavensiDesktopcatalinalog SystemerrprintlnbytesInputlength catchIOException e SystemoutprintlnegetMessage
A: Maybe you removed a line from the projectandroidappbuildgrade Try adding this Piece of Code apply from flutterRootpackagesfluttertoolsgradlefluttergradle after the line apply plugin comandroidapplication
A: For everyone landing here after making changes to the gradle for firebase or smth it might seem stupid but check that the autoformatif you have it enabled didnt make funny things like putting spaces between or turning them into or
A: You might have removed certain lines of code from projectandroidappbuildgrade add below below lines of code before android namespace comexampletestapp compileSdkVersion fluttercompileSdkVersion ndkVersion flutterndkVersion lines of code to be added apply plugin comandroidapplication apply plugin kotlinandroid apply from flutterRootpackagesfluttertoolsgradlefluttergradle
A: My console displayed a similar error message to yours as well as a blank grey screen After searching for few days I found out that the error could be due to an expanded or flexible widget solution just try to remove or replace Expanded widget it worked for me Thank you
A: For me it meant I had a null value somewhere After searching deeper it was envprod files that work for web on local builds in Chrome but not once published i had to use dotenvprod for my variable files
A: I had the same error I dont know enough flutter on a technical level but what fixed it for me was changing the root widget of the web page to a Scaffold
A: The error youre seeing is caused by the fact your ClaimsPrincipal doesnt have the mandatory sub claim as indicated by the exception message To fix that you have two options manually adding the sub claim or asking Identity to use sub as the name identifier claim Add the sub claims to the principal returned by await signInManagerCreateUserPrincipalAsyncuser Note while ASPNET Core Identity uses the legacy WSFederation claims exposed by the ClaimTypes class OpenIddict uses the newer JWT claims defined by the OpenID Connect specification To ensure the mandatory subject claim is correctly populated and avoid an InvalidOperationException its manually added here if stringIsNullOrEmptyprincipalFindFirstValueOpenIdConnectConstantsClaimsSubject identityAddClaimnew ClaimOpenIdConnectConstantsClaimsSubject await userManagerGetUserIdAsyncuser or ask Identity to use sub as the name identifier claim servicesConfigureIdentityOptionsoptions optionsClaimsIdentityUserNameClaimType ClaimsName optionsClaimsIdentityUserIdClaimType ClaimsSubject optionsClaimsIdentityRoleClaimType ClaimsRole
A: InvalidOperationException Could not create an instance of type SystemDataSqlClientSqlDataReader Model bound complex types must not be abstract or value types and must have a parameterless constructor Record types must have a single primary constructor Alternatively give the reader parameter a nonnull default value
A: open file startupcs and Use the code below inside ConfigureServices servicesAddTransient use model name into
A: I had to use the version of protobuf plugins id comgoogleprotobuf version
A: The configuration below worked for me At modules buildgradle file plugins id comgoogleprotobuf version dependencies implementation androidxdatastoredatastore implementation comgoogleprotobufprotobufjavalite protobuf protoc artifact comgoogleprotobufprotoc generateProtoTasks alleach task taskbuiltins java option lite
A: plugins idcomgoogleprotobuf version protobuf protoc artifact comgoogleprotobufprotoc generateProtoTasks allforEach task taskbuiltins java lite Try to build Newer version of ProtoBuf
A: It is working for me now Mistake is I have declared a parameter Id as varchar but I didnt give any size to that Now I have declared max size to the parameter and its working fine cmdchkParametersAddid OracleDbTypeVarcharDirection ParameterDirectionOutput
A: Faced the same issue when declaring out put value as Varchar Adding a Size property to Parameter solved the issue commandCommandType CommandTypeStoredProcedure commandCommandText functionname commandParametersAddnew OracleParameter ParameterName result Size Direction ParameterDirectionReturnValue OracleDbType OracleDbTypeVarchar
A: Another strage thing we RAN into related to this is with Oracle functions for the special ParameterDirectionReturnValue all the rest of the ParameterDirection will work if you decalre it like bellow directly in the constructor it DOSENT work cmdParametersAddnew OracleParametermyretval OracleDbTypeLong ParameterDirectionReturnValue Result in error like ORA PLSQL numeric or value error character string buffer too small ORA no data found ORA at line if you declare it like this it works OracleParameter retval new OracleParametermyretval OracleDbTypeLong retvalDirection ParameterDirectionReturnValue cmdParametersAddretval
A: Python comes with this inbuilt as part of distutils The module is called distutilsversion and is able to compare several different version number formats from distutilsversion import StrictVersion print StrictVersion StrictVersion For way more information than you need see the documentation import distutilsversion helpdistutilsversion
A: If you are talking about modules installed with easyinstall this is what you need import pkgresources pkgresourcesrequireTurboGears this will raise an error if the installed module is of a lower version Traceback most recent call last File tempplgpy line in module pkgresourcesrequireTurboGears File usrlibpythonsitepackagespkgresourcespy line in require needed selfresolveparserequirementsrequirements File usrlibpythonsitepackagespkgresourcespy line in resolve raise VersionConflictdistreq XXX put more info here pkgresourcesVersionConflict TurboGears usrlibpythonsitepackagesTurboGearspyegg RequirementparseTurboGears
A: Like this assert tuplemapintmoduleversionsplit Module not version x This is wordy but works pretty well Also look into pip which provides more advanced functionality
A: The current answers break down if youre using both arguments to construct an error message to pass to the parent Exception class I believe the best way is to simply override the reduce method in your exception The reduce method should return a two item tuple The first item in the tuple is your class The second item is a tuple containing the arguments to pass to your classs init method import pickle class MyExceptionException def initself arg arg selfarg arg selfarg arg superMyException selfinitarg arg formatarg arg def reduceself return MyException selfarg selfarg original MyExceptionfoo bar print reproriginal print originalarg print originalarg reconstituted pickleloadspickledumpsoriginal print reprreconstituted print reconstitutedarg print reconstitutedarg More info about reduce here
A: Make arg optional class MyExceptionException def initself arg argNone selfarg arg selfarg arg superMyException selfinitarg The base Exception class defines a reduce method to make the extension Cbased type picklable and that method only expects one argument which is args see the BaseExceptionreduce function in the C source The easiest workaround is making extra arguments optional The reduce method also includes any additional object attributes beyond args and message and your instances are recreated properly e MyExceptionfoo bar ereduce class mainMyException foo arg foo arg bar pickleloadspickledumpse MyExceptionfoo e pickleloadspickledumpse earg foo earg bar
A: I like Martijns answer but I think a better way is to pass all arguments to the Exception base class class MyExceptionException def initself arg arg superMyException selfinitarg arg selfarg arg selfarg arg The base Exception class reduce method will include all the args By not making all of the extra arguments optional you can ensure that the exception is constructed correctly
A: At first you should check your test logic Usually there are cases First you are mocking the wrong method you made a typo or someone changed tested code so that mocked method is no longer used Second your test is failing before this method is called Third your logic falls in wrong ifswitch branch somewhere in the code so that mocked method is not called If this is the first case you always want to change the mocked method for the one used in the code With the second and the third it depends Usually you should just delete this mock if it has no use But sometimes there are certain cases in parametrized tests which should take this different path or fail earlier Then you can split this test into two or more separate ones but thats not always good looking test methods with possibly arguments providers can make your test look unreadable In that case for JUnit you silent this exception with either RunWithMockitoJUnitRunnerSilentclass annotation or if you are using rule approach Rule public MockitoRule rule MockitoJUnitrulestrictnessStrictnessLENIENT or the same behaviour Rule public MockitoRule rule MockitoJUnitrulesilent For JUnit tests you can silence this exception using this annotation provided in mockitojunitjupiter package ExtendWithMockitoExtensionclass MockitoSettingsstrictness StrictnessLENIENT class JUnitMockitoTest
A: Replace RunWithMockitoJUnitRunnerclass with RunWithMockitoJUnitRunnerSilentclass
A: For me neither the Rule nor the RunWithMockitoJUnitRunnerSilentclass suggestions worked It was a legacy project where we upgraded to mockitocore We could get rid of the UnnecessaryStubbingException by using MockitolenientwhenmockedServicegetUserByIdanythenReturnnew User instead of whenmockedServicegetUserByIdanythenReturnnew User Needless to say that you should rather look at the test code but we needed to get the stuff compiled and the tests running first of all
A: Add a message to the base Exception public class InvalidStatusCodeException Exception public HttpStatusCode ReceivedStatusCode get set public string ApiUrl get set public InvalidStatusCodeExceptionHttpStatusCode receivedStatusCode string apiUrl baseInvalid Status code for request apiUrl received code receivedStatusCode ReceivedStatusCode receivedStatusCode ApiUrl apiUrl
A: You can use the concept of structure logging which logs the named constant as custom properties catchInvalidStatusCodeException statusex logLogErrorstatusex Invalid Status code for request ApiUrl received code ReceivedStatusCode statusexApiUrl statusexReceivedStatusCode The above log will add ApiUrl and ReceivedStatusCode as custom properties in application insights log Update You dont need to throw and catch the exception You can log in the else block of if responseIsSuccessStatusCode like shown below if responseIsSuccessStatusCode else logLogErrorstatusex Invalid Status code for request ApiUrl received code ReceivedStatusCode apiUrl responseStatusCode Other way of logging custom properties is via Logging Scope check this and via TelemetryInitializer check this
A: You can write a custom middleware for this There are steps create your custom telemetry middleware which specifies what you want to capture from the request register it as a middleware extension register your middleware to be used by your server Step Customise what telemetry you want to capture public class CustomTelemetryMiddleware private readonly RequestDelegate next public CustomTelemetryMiddlewareRequestDelegate next next next httpsgithubcommicrosoftApplicationInsightsaspnetcoreissuesissuecomment public async Task InvokeHttpContext context var requestTelemetry contextFeaturesGetRequestTelemetry if requestTelemetry null var request contextRequest add items to show up in Request Properties requestTelemetryContextUserId contextUserIdentityName add items to show up in Custom Properties requestTelemetryPropertiesAddPayingCustomer Yes Capture the request body as a Custom Property if requestBodyCanRead true requestEnableBuffering var bodySize intrequestContentLength requestBodyLength if bodySize requestBodyPosition byte body using var ms new MemoryStreambodySize await requestBodyCopyToAsyncms body msToArray requestBodyPosition var requestBodyString EncodingUTFGetStringbody requestTelemetryPropertiesAddRequestBody requestBodyString await nextcontext Step register it public static class CustomTelemetryMiddlewareExtensions public static IApplicationBuilder UseCustomTelemetrythis IApplicationBuilder builder return builderUseMiddlewareCustomTelemetryMiddleware And finally Step register it in your Startupcs public async void ConfigureIApplicationBuilder app IWebHostEnvironment env IApiVersionDescriptionProvider provider put this towards the end of your pipeline appUseCustomTelemetry
A: First of all if its an application with user interaction you should never do blocking Wait or Result calls on the main thread this will lockup your application for further user interaction So you need to start by using async code this is a sample of an async ButtonClick handler It will give you a warning but this seems to be one of the usecases of an async void private async void ButtonClickobject sender RoutedEventArgs var currentUser await graphClientMeRequestGetAsync Presumably do something with the response labelUserText currentUserDisplayName Few days ago I found a nice video about common asyncawait mistakes You seem to be talking about a console app running on windows As of C you can also have an public static Task Mainstring args as starting point Then your application would look like this public static async Task Mainstring args Create the client here var graphClient Await every call to the graphclient var currentUser await graphClientMeRequestGetAsync Do something with the user
A: Maybe the reponsepayload you get is very huge that while it processes the request times out I had this issue frequently a while back while I was fiddling with graph api so i used pagination to limit the sizequantity of items sent back by it
A: Ive just experienced this and the cause was a corporate firewall was blocking traffic to graphmicrosoftcom This can be seen in wireshark as TCP Retransmissions after the initial request Unblocking this host resolved this issue for me
A: Since tomcat is throwing the exception you are not able to handle it Thus you need to tell tomcat to allow all size of files to be uploaded and handle the size at controller level set multipart properties below multipart maxfilesize maxrequestsize set Tomcat maxSwallowSize on controller add logic to check size iffileAttachmentgetSize throw new MaxUploadSizeExceededExceptionfileAttachmentgetSize
A: Because of this springhttpmultipartmaxfilesizeMB springhttpmultipartmaxrequestsizeMB control is not going to controller Tomcat only throwing exception If you want to return message then remove these lines from properties file and add a check in your controller only like if filegetSize throw new RuntimeExceptionFile size error
A: The mentioned exception thrown from tomcat it couldnt reach out to the controller Sothere are many possible ways we can handle this Add the below application property and do the size restriction logic springhttpmultipartmaxfilesize springhttpmultipartmaxrequestsize the indicates it can allow unlimited size But this is ok for development not for production grade application inside the logic class you can define your size limit logic You can get the size of the file and throw a expection as you desired iffileAttachmentgetSize error logic throwing exception or return the error response note byte value equals to MB Mentioning a multipart exception in a generalException handler class ControllerAdvice public class GlobalExceptionHandler ExceptionHandlerMultipartExceptionclass public ResponseEntityStringfileExcedMultipartException ex return ResponseEntityokFile limit exceeded This sizeExceedException mentioned in the question is implicitly invoke the multipart exceptionso whenever the file limit exceeds the above error message will throws
A: your csproj file to enforce copying NuGet assemblies to the built output CopyLocalLockFileAssembliestrueCopyLocalLockFileAssemblies
A: If you are running application in dockerthen do an update to install libwkhtmltox dependencies for netcore Install libwkhtmltox dependencies RUN aptget update aptget install y noinstallrecommends zlibg fontconfig libfreetype libx libxext libxrender libjpegturbo
A: Download package from httpsgithubcomrdvojmocDinkToPdftreemasterv Add it to your project reference by custom Assembly reference register in your startup project This is custom assembly load context which can load library from absolute path internal class CustomAssemblyLoadContext AssemblyLoadContext public IntPtr LoadUnmanagedLibrarystring absolutePath return LoadUnmanagedDllabsolutePath protected override IntPtr LoadUnmanagedDllString unmanagedDllName return LoadUnmanagedDllFromPathunmanagedDllName protected override Assembly LoadAssemblyName assemblyName throw new NotImplementedException In Statupcs add below code Call CustomAssemblyLoadContext before you create your converter CustomAssemblyLoadContext context new CustomAssemblyLoadContext contextLoadUnmanagedLibrarypath var converter new SynchronizedConverternew PdfTools servicesAddSingletonconverter servicesAddSingletontypeofIConverter new SynchronizedConverternew PdfTools
A: If youre receiving an exception but no corresponding stack trace then at some point an exception handler is probably evaluating the exception and rethrowing it incorrectly For example if youre doing a throw ex youll eat the stack trace that led to that point To preserve the existing call stack you want to simply throw Throwing exceptions best practices Note that the C way is the opposite of the convention for the Java language where you are supposed to throw ex Java reference Best Practice Catching and rethrowing Java Exceptions
A: I prefer to manage my exceptions with custom exceptions If in your case you are using your own exceptions you can go the the class were you define them and override the stacktrace eg public class YourCustomException Exception public YourCustomException base constructor public override string StackTrace get return Message instead stacktrace
A: Since this has been open long enough Ill take the only likely answer rather than leave it open forever Namely The Exception class can be constructed from serialized info and it looks like the serialized info could contain null strings for stack trace and potentially that could be created without causing other errors I guess it might come from there but I dont know how it originated My only other thought was that perhaps the rest of the exception information could not be written to the log file before the app domain was torn down But since the same was displayed in the Event Viewer and I assume that the whole event is created atomically I think thats not how it happened
A: When unit testing you have to replace DispatchersMain with a different dispatcher than it has by default because the default implementation of DispatchersMain doesnt exist when not running a full application To do this you need to have the kotlinxcoroutinestest test dependency if you dont already testImplementation orgjetbrainskotlinxkotlinxcoroutinestest You can create a coroutine testing rule to set this up before and after each test so you can simplify handling this in each of your test classes Put this in its own file ExperimentalCoroutinesApi class MainDispatcherRuleval dispatcher TestDispatcher StandardTestDispatcher TestWatcher override fun startingdescription Description DispatcherssetMaindispatcher override fun finisheddescription Description DispatchersresetMain And then add the rule to your test class ExperimentalCoroutinesApi getRule val mainDispatcherRule MainDispatcherRule Your tests that use coroutines should use and return the runTest function so they should look like this ExperimentalCoroutinesApi Test fun fooTest runTest Sorry if Ive missed anything There are a lot of changes in the latest kotlinxcoroutinestest version and Im not up to speed on it yet
A: When using junit There are no more Rules But you can use extension for that Kotlin OptInExperimentalCoroutinesApiclass class MainDispatcherExtension private val testDispatcher TestDispatcher UnconfinedTestDispatcher BeforeTestExecutionCallback AfterTestExecutionCallback override fun beforeTestExecutioncontext ExtensionContext DispatcherssetMaintestDispatcher override fun afterTestExecutioncontext ExtensionContext DispatchersresetMain
A: Tenfour thank you for your answer However in my case I searched for notdeprecated alternative of runBlockingTest like in Google example with deprecated API so I used UnconfinedTestDispatcher instead of StandardTestDispatcher like this ExperimentalCoroutinesApi class MainCoroutineRuleval dispatcher TestDispatcher UnconfinedTestDispatcher TestWatcher override fun startingdescription Description DispatcherssetMaindispatcher override fun finisheddescription Description DispatchersresetMain
A: Problem solved Change my project structure move root Package and Model and Dao to comexamplemodel Move Applicationjava to root so it will scan components automatically Related to this same problem and solution Field required a bean of type that could not be found error spring restful API using mongodb
A: I changed my Spring Boot version to RELEASE and the issue was solved Cleared the mvn folder and rebuild my project and the issue was resolved
A: suppose you are missing Repository annotation in the UserPropsRepository interface repositoryuserPropsRepository public interface UserPropsRepository extends MongoRepositoryUserProps String UserProps findOneString id UserProps saveUserProps props UserProps updateUserProps props void deleteUserProps props
A: For my case after upgrade my reactnative project from version x to x The Android debug build should work but release build got same issue Change to use Android Gradle plugin help me resolved this androidbuildgradle classpath comandroidtoolsbuildgradle
A: The Android Gradle Plugin version was when the project was first created Android Studio version asked me to upgrade to so I upgraded It worked when I downgraded the version to androidbuildgradle classpathcomandroidtoolsbuildgradle
A: this helped me to solve it httpsgithubcomfacebookreactnativeissuesissuecomment Fix for bundle not getting included in APK or AAB with android gradle plugin Seems like theres a task ordering issue and the assets get computed before the bundle is copied This forces the copy task to run before merge resources projectafterEvaluate tasksfindAll task tasknamestartsWithmerge tasknameendsWithResources each t tdependsOn copyReleaseBundledJs
A: I solved this problem by downgrading from Version to by executing InstallPackage CosturaFody Version in PackageManagerConsole
A: Try to update CosturaFody packages for your project For me it was enough
A: Having the exact same issue here It used to work last week we did not change anything and now CosturaFody seems to look for MonoCecil but I can only find in the packages folder I tried downgrading CosturaFody to and Fody to but im still having the exact same problem You can see that other people are having this issue too here httpsgithubcomFodyCosturaissues
A: A SEH Structured Exception Handling exception is not a Cexception that can be handled using clanguage constructs trycatch but it is raised from windows itself and points to some fundamental flaw SEHexceptions are very annoying because they do not cause normal stack unwinding which can lead to unclosed files or notunlocked mutexes that should normally cleared by the destructors of the owning object I have encountered SEHexceptions when accessing memory that does not belong to the current process so I recommend looking at memoryrelated instructions in the constructor and destructor of CSig You can read about SEH for instance here
A: The way I just found the problem was that in Visual Studio I went to DebugExceptions and checked everything in the first column Then rundebug your unit tests and it will throw an exception on the line that the problem is at Thats where you need to debugfix it
A: I ran into this very problem using GoogleTest with Visual Studio Our setup involves creating a library for the GoogleTest Frameworks which is then linked against our individual Unit Tests I recently updated the Frameworks support and recompiled it from scratch After doing this I encountered the exception described above After a bit of digging I discovered that the Struct Member Alignment setting was the culprit Project properties Configuration Properties CC Code Generation Struct Member Alignment While the Frameworks project had the setting set to default the corresponding Unit Test project had it configured to Byte Zp Once I changed them to have the same alignment the problem went away
A: Go to CUsersyourusernamegradle folder hidden folder Go to folder option and enable show hidden files if folder is not showing up Look for file gradleproperties if DOES NOT most likely this would be the case exists Create it under CUsersyourusernamegradle Copy and paste following code More detail httpsdocsgradleorgcurrentuserguidebuildenvironmenthtmlsecgradleconfigurationproperties look for Accessing the web via proxy for https and userpwd variables systemProphttpproxyHostPROXY SERVER systemProphttpproxyPortPROXY PORT save and try again
A: look for gradleproperties file open it and change from distributionUrlhttps to distributionUrlhttp that will fix it
A: I was facing the same problem when I was connected to WiFi with a download speed of Mbps which is good enough I guess After spending hours while still being clueless I just changed the network Connected to hotspot from my mobile data with a much lower download speed of around Mbps The error vanished Maybe something was wrong with the WiFi
A: As the documentation says Each test is run in a new thread If the specified timeout elapses before the test completes its execution is interrupted via Threadinterrupt This happens in interruptable IO and locks and methods in Object and Thread throwing InterruptedException It means that InterruptedException is thrown incase of timeout Identify Throwable type and handle logging case as following Test public void tc throws Exception try do stuff catch Throwable t take screenshot output results ift instanceof InterruptedException InterruptedException logging case
A: You can create a second rule and chain it with the TimeOut Use JUnits RuleChain for this Rule public final TestRule timeout RuleChain outerRulenew TestWatcher Override protected void failedThrowable e Description description if e instanceof TestTimedOutException do your stuff here aroundnew Timeout
A: You can also try to test the exception this way TestexpectedTimeoutExceptionclass public void tc call your method with parameter so that it will throws a timeoutexception It means if the method throws an TimeoutException then the test will be OK
A: This is the simplest solution IMHO how to define custom exception with a default message that can be overridden if needed class CustomExceptionException def initself msgMy default message args kwargs superinitmsg args kwargs Usage example In raise CustomException CustomException Traceback most recent call last ipythoninputaece in module raise CustomException CustomException My default message In raise CustomException CustomException Traceback most recent call last ipythoninputcaa in module raise CustomException CustomException My default message In raise CustomExceptionFoo bar CustomException Traceback most recent call last ipythoninputefbff in module raise CustomExceptionFoo bar CustomException Foo bar
A: The solution is given by the bellow code class CustomExceptionException def initself args kwargs defaultmessage This is a default message if any arguments are passed If you inherit from the exception that takes message as a keyword maybe you will need to check kwargs here if args pass them to the super constructor superinitargs kwargs else else the exception was raised without arguments pass the default message to the super constructor superinitdefaultmessage kwargs An equivalent but more succinct solution is class CustomExceptionException def initself args kwargs defaultmessage This is a default message if no arguments are passed set the first positional argument to be the default message To do that we have to replace the args tuple with another one that will only contain the message we cannot do an assignment since tuples are immutable If you inherit from the exception that takes message as a keyword maybe you will need to check kwargs here if not args args defaultmessage Call super constructor superinitargs kwargs An even more succinct but restricted solution in a way that you can only raise the CustomException with no arguments is class CustomExceptionException def initself defaultmessage This is a default message superinitdefaultmessage You can of course save one line in each of the above solutions if you just pass the string literal to the constructor rather than using the defaultmessage variable If you want the code to be Python compatible then you just replace the super with superCustomException self Now running raise CustomException will output Traceback most recent call last File stdin line in module mainCustomException This is a default message and running raise CustomExceptionThis is a custom message will output Traceback most recent call last File stdin line in module mainCustomException This is a custom message This is the output that the first solutions code will produce The last solution differs in that calling it with at least one argument like raise CustomExceptionThis is a custom message it will output Traceback most recent call last File stdin line in module TypeError init takes positional argument but were given because it does not permit any arguments to be passed to the CustomException when it is raised
A: As regarded in an answer to this question this is a pretty good way to declare a custom exception class MyExceptionException Docstring here If one has many exceptions to define one may use a subclass of Exception as their exceptions superclass to make these exceptions docstrings their default messages class DocDefaultExceptionException Subclass exceptions use docstring as default message def initself msgNone args kwargs superinitmsg or selfdoc args kwargs class MyExceptionDocDefaultException Docstring here raise MyException Output Traceback most recent call last File Cpy line in module raise MyException mainMyException Docstring here A decorator also works to use the docstring of a custom exception as its default message import functools def docstringmessagecls Decorates an exception to make its docstring its default message Must use clsinit name not clsinit itself in closure to avoid recursion clsinit clsinit functoolswrapsclsinit def wrappedinitself msgclsdoc args kwargs clsinitself msg args kwargs clsinit wrappedinit return cls docstringmessage class MyExceptionException Docstring here raise MyException Output Traceback most recent call last File Cpy line in module raise MyException mainMyException Docstring here Of course one should raise exceptions with a descriptive message but a default fallback is sufficient sometimes and a docstring can suffice if written correctly
A: Django needs to be setup in order to run fine when you run it through managepy shell managepy takes care or setting it up for you but doing it via a python script needs manual setup You also seem to have used your defined models to be able to import them into your python script you need to add the path to the root folder of your project to the current python path Finally you need to tell django where your settings file is before setting up your django in your managepy file you should have something like this osenvironsetdefaultDJANGOSETTINGSMODULE myappsettings Go make it a constant name it DEFAULTSETTINGSMODULE so you now have osenvironsetdefaultDJANGOSETTINGSMODULE DEFAULTSETTINGSMODULE Now you need to import the constant into your script and tell django By setting an env var where it should look for the settings file So in all import sys os syspathinsert pathtoparentofcourseware homeprojectsmydjproj from manage import DEFAULTSETTINGSMODULE osenvironsetdefaultDJANGOSETTINGSMODULE DEFAULTSETTINGSMODULE import django djangosetup This way youre setup up just fine
A: For new users coming on this question If you dont want to setup django settings file manually as described wonderfully by SpiXel You can run python managepy shell from the project directory which will basically link the settings file that django needs automatically
A: When you open a shell django automatically sets itself up With Python interpreter you have to do this manually import django djangosetup
A: AFAIK you can differentiate between two Exceptions of the same Type only by the Message However you should not rely on the Message to make Catch decisions The Message may be localized depending on the locale configuration of the system you are executing your code on This will make your Catch When block not relevant if the language of the system is different than the language of the Message you hardcoded The only case where you can use the Message is when you are the system administrator and writing a software for a server you will be managing and you are sure that the language you are using will not change in the future which cannot be guaranteed when you write a software for to run on client devices
A: I had a similar Problem with Exceptions of the same Type which i couldnt catch because they were thrown in a piece of code i dont have access to My solution was distinguishing by the Source and TargetSite of the exception It feels kind of like a dirty fix but it works
A: This is an unstable solution because the source code of NET can change in the future but I cant find the other one For example if you want to detect InvalidOperationException with this message A task may only be disposed if it is in a completion state RanToCompletion Faulted or Canceled then you can use this code try catch Exception exc string taskErrMsg null if exc is InvalidOperationException try Assembly sysAsm AssemblyGetAssemblytypeofSystemString get System assembly SystemResourcesResourceManager rm newSystemPrivateCoreLibStrings sysAsm taskErrMsg rmGetStringTaskDisposeNotCompleted get the error message in the current language catch if taskErrMsg is not null excMessage taskErrMsg if the exception is related to task disposal else I came up with this solution by looking into the source code of the Task class here httpssourcedotnetSystemPrivateCoreLibsrclibrariesSystemPrivateCoreLibsrcSystemThreadingTasksTaskcsded You can look up the other message IDs here httpssourcedotnetSystemPrivateCoreLibartifactsobjcoreclrSystemPrivateCoreLibxDebugSystemSRcsbccd I tried to add these as links but it seems that the code block broke all the text highlighting below it
A: Section of the draft Technical Report on C Performance is entirely devoted to the overhead of exceptions
A: As a suggestion dont bother too much with the overhead when exceptions are thrown Exception handling implementations usually make not throwing fast and catching slow Thats ok since those cases are well exceptional Carl
A: Heres the measuring code I came up with Do you see any problems with it Works on Linux and Windows so far compile with g exceptionhandlingcpp o exceptionhandling O or for example Visual C Express To get the base case exception support removed from the language altogether use g exceptionhandlingcpp o exceptionhandling O fnoexceptions DNOEXCEPTIONS or similar settings in MSVC Some preliminary results here They are probably all hokey because of varying machine load but they do give some idea about the relative exception handling overhead Executive summary none or little when no exceptions are thrown huge when they actually are thrown include stdioh Timer code if definedlinux include systimeh include timeh double time timeval tv gettimeofdaytv return tvtvsec tvtvusec elif definedWIN include windowsh double getperformancefrequency unsigned int frequency QueryPerformanceFrequencyLARGEINTEGER frequency just assume it works return doublefrequency double performancefrequency getperformancefrequency double time unsigned int counter QueryPerformanceCounterLARGEINTEGER counter return doublecounter performancefrequency else error time not implemented for your platform endif How many times to repeat the whole test const int repeats How many times to iterate one case const int times Trick optimizer to not remove code int result Case No exception thrown nor handled void dosomething result void case dosomething Case No exception thrown but handler installed ifndef NOEXCEPTIONS void dosomethingelse result void case try dosomething catch int exception dosomethingelse Case Exception thrown and caught void dosomethingandthrow throw result void case try dosomethingandthrow catch int exception result exception endif NOEXCEPTIONS void tests case ifndef NOEXCEPTIONS case case endif NOEXCEPTIONS int main ifdef NOEXCEPTIONS printfcasen else printfcasetcasetcasen endif for int repeat repeat repeats repeat for int test test sizeoftestssizeoftests test double start time for int i i times i teststest double end time printfft end start times printfn return result optimizer is happy we produce a result
A: I assume that your image is under the assets folder So you need to call image like this AssetImageassetsimagesdiamondpng And be sure that you wrote this correctly in your pubspecyaml assets assetsimages
A: make changes in your pubspecyaml file add this line to import all the files present in images folder assets images for showing image you can use any one of the code shown below Imageimage AssetImageimagesdiamondpng or Imageassetimagesdiamondpng
A: Add asset path in pubspecyaml as assets imagesdiamondpng or you can also add parent folder path assets images
A: You will get an IO exception SystemIOIOException There is not enough space on the disk at SystemIOErrorWinIOErrorInt errorCode String maybeFullPath The SystemIO library handles the actual tasks of reading and writing to disk and wraps them in managed code so you shouldnt get any unmanaged exceptions using them Its also worth trying this with one of those shoddy small USB sticks they give out everywhere to see what happens with your code thats usually the best way of finding out this sort of thing
A: You will get an IOException But the problem is that IOException is quite broad spectrum not only disk full I recommend to also check the HResult inside to precisely filter out this case catch IOException ioEx Is it DISKFULL uint unsignedResult uintioExHResult if unsignedResultIsOneOfx x x x Remove the partial file try FileDeletepathName catch do your special stuff here else throw Note that the Win error codes from region are mirrored in the region thats why there is a near duplicate in the checks
A: You could check the Win Exception after what you have fails to see if that gives more detail WinException ex new WinException string lowlevelerror exMessage How are you writing to disk For FileStream it says Be sure to call the Dispose method on all FileStream objects especially in environments with limited disk space Performing IO operations can raise an exception if there is no disk space available and the Dispose method is not called before the FileStream is finalized
A: Update GetHub enterprise now has the ability to create custom roles in which you can assign the permission to bypass branch policy The only way to excempt users is to make them repo admins and allow admins to bypass the policy Or use a GitHub actions workflow that uses the PAT if an admin to push to the target branch if the changes were pushed by allowlisted users That opens up some interesting security issues though
A: Today people on the list people and teams with push access on the matching branch as in your question are still allowed to push to that branch even if you say Require pull request reviews before merging and I approximate nobody can override the restrictions to merging
A: No there currently is no option for that but you could raise a feature request here There probably is no way to work around the branch protection which is pretty much the point of it On your second question As far as I know there is no specific premerge hook here is the list of all workflow triggers You could work around this triggering at push for the branch you are merging to or could trigger on creating a release or maybe one of the mentioned pullrequest hooks can enable your scenario
A: Try reading conversation in the forum Here I think they have similar problems as yours Maybe some of the solutions they mentioned might work for you But have tried creating and building new unity project or building your previous projects If it says read only then its probably problems with permissions Try opening unity with admin permissions If that wont work then try reinstalling unity using unity hub with android unity android I once solved similar problem by doing this Hopefully I was helpful Good luck
A: I ran into this same error when I was trying to target a different API Level than the one Unity came installed with I had copied some android platform files from a separate SDK location but when I tried to build I got that readonly error So I removed those copied files and under Preferences External Tools I unchecked the option Android SDK Tools Installed with Unity For me that automatically selected the other Android SDK location I had tried to copy from So the build worked for me after that but you may need to select Browse to find the correct path to your SDK location
A: I tried several of these options and nothing worked Selected Developmental Build and no errors
A: add mavenassemblyplugin to your pomxml eg plugin groupIdorgapachemavenpluginsgroupId artifactIdmavenassemblypluginartifactId configuration descriptorRefs descriptorRefjarwithdependenciesdescriptorRef descriptorRefs configuration executions execution idmakeassemblyid phasepackagephase goals goalsinglegoal goals execution executions plugin
A: with spring boot we can use springbootmavenplugin build plugins plugin groupIdorgspringframeworkbootgroupId artifactIdspringbootmavenpluginartifactId executions execution idrepackageid goals goalrepackagegoal goals configuration classifierexecclassifier configuration execution executions plugin plugins build
A: check your project build gradle file if you have something like this application mainClasssetMainKt just remove it and build your project again
A: You set a timeout in your job but this timeout is larger than the value in retryafter which you have defined in the this config See httpslaravelcomdocsxqueuesjobexpirationsandtimeouts There is a clear warning The timeout value should always be at least several seconds shorter than your retryafter configuration value This will ensure that a worker processing a given job is always killed before the job is retried If your timeout option is longer than your retryafter configuration value your jobs may be processed twice You could define a new connection for long running jobs and set this connection on the job dispatch to specific connection instead of using the timeout
A: Just increase the timeout if you want But be careful not to occupy server resources for long periods php artisan queuework timeout
A: The command that runs your queue worker needs tries and timeout to set the out limits your queue worker to allow This makes sure that your commands cannot go beyond the limits of your defined workers You can use the job properties to achieve timeout or tries below And use queue configuration file to set a default
A: Okay so I figured it out Simply had to add this line to the onUpgrade method inside my migration strategy because the column checkListId was added later await migratoraddColumntasks taskscheckListId Also bumped my schema version before cleaning an running buildrunner
A: I had the same problem when I changed the table name in the code I fixed it by deleting the application from the emulator or from the physical phone and rerunning the compilation of the application
A: Just delete the database Mine was in Documents The problem is usually due to the project name Delete the project and then run it again
A: You need to annotate UserDao with Repository annotation
A: UserDao should be a spring bean In order to make it a spring bean use annotation Repository or Component
A: You are using Autowired UserDao in main class which is the cause Try Adding Repository in UserDao Then annotate run method in MyFirstArtifactApplication with PostConstruct If the above does not work then try changing your main class to SpringBootApplication public class MyFirstArtifactApplication Autowired UserDao userDao private static final Logger log LoggerFactorygetLoggerMyFirstArtifactApplicationclass public static void mainString args SpringApplicationrunMyFirstArtifactApplicationclass args Systemoutprintlnciao PostConstruct public void setUpDataString strings throws Exception loginfociao userDaosavenew UserAAABBBAAA A B AAuser userDaosavenew UserRSSMRATAS M Rab user
A: Usually when working with Entity Framework youll need to enable the multiple active result sets option in your connection string by setting MultipleActiveResultSets to true as follows add nameconn connectionString Data Source Initial CatalogTDB UIDadmin PWD MultipleActiveResultSetsTrue providerNameSystemDataSqlClient Verify that it solves your problem
A: Check whether you SQL Server is running or not Just Open Task Manager and Goto Services Click on Services button below and check whether SQL Server is running or not
A: In my case the issue was that the account which I was using to connect to SQL server was not added to app pool identity Once I added the account domainusername to app pool it started working
A: An onfailurecallback can be supplied to the DAG andor individual tasks In the first case supplying to the DAG there is no exception in the context the argument Airflow calls your onfailurecallback with In the second case supplying to a task there is The contained object should be a python Exception Its surprisingly nonintuitive to get something like a stack trace from that but from this answer I use the following to get a fairly readable stack trace import traceback exception contextgetexception formattedexception join tracebackformatexceptionetypetypeexception valueexception tbexceptiontraceback strip
A: The error is added to the context here So you can actually get that simply by doing contextgetexception Unfortunately it doesnt look like you can get a stack trace or something like that from the context
A: I think its probably no way to get the exception detail inside the callback Look at the source code Handling callbacks pessimistically try if selfstate StateUPFORRETRY and taskonretrycallback taskonretrycallbackcontext if selfstate StateFAILED and taskonfailurecallback taskonfailurecallbackcontext except Exception as e loggingerrorFailed at executing callback loggingexceptione
A: I encountered this Error Catastrophic failure Exception from HRESULT xFFFF EUNEXPECTED in Visual Studio when just changing the Solution Configuration from Debug to Release Fortunately reopening Visual Studio eliminate this error
A: Close Visual Studio Go To Project Directory Remove vs Folder If vs folder not found show hidden files and then remove vs folder Open project again enjoy coding
A: Seems various causes lead to this error in Visual Studio Community Edition Studio Version I added a Windows Form to an existing project named it including the ending cs did not like that at all I was not able to save the project neither that specific file nor the project but was confronted with the catastrophic error Luckly copypast to Visual studio and past into newly added blank form that worked smoothly although the same problem occurred until I added the new form without suffix cs
A: The command to launch the Selenium Grid Node is error prone You need to drop the double quotes ie around Cgeckodriverexe and replace the single back slash ie with escaped back slash ie as follows java DwebdrivergeckodriverCgeckodriverexe jar seleniumserverstandalonejar role node hub httpgridregister port
A: Had the same error above helps but also found in addition in Powershell you have to use double quote for example java DwebdriverchromedriverCToolschromedriverexe jar seleniumserverstandalonejar Above seems to work fine note Dwebdriverchromedriver
A: I got the same error and fixed with this java Dwebdriverchromedriverchromedriverexe jar seleniumserverstandalonejar role node hub httpgridregister maxSession browser browserNamechromeversionANYplatformWINDOWSmaxInstances
A: An Exception has the attributes message and cause The message is a description telling a human reader more or less exactly what went wrong The cause is something different it is if available another nested Throwable The concept is often used if we use custom exceptions like this catchIOException e throw new ApplicationExceptionFailed on reading file soandso e Message Cause In response to djangofans comment The standard is that the nested expression the cause is printed with its stack trace too Running this little application public class Exceptions public static void mainString args Exception r new RuntimeExceptionSome message throw new RuntimeExceptionSome other message r will output Exception in thread main javalangRuntimeException Some other message at ExceptionsmainExceptionsjava at sunreflectNativeMethodAccessorImplinvokeNative Method at sunreflectNativeMethodAccessorImplinvokeNativeMethodAccessorImpljava at sunreflectDelegatingMethodAccessorImplinvokeDelegatingMethodAccessorImpljava at javalangreflectMethodinvokeMethodjava at comintellijrtexecutionapplicationAppMainmainAppMainjava Caused by javalangRuntimeException Some message at ExceptionsmainExceptionsjava more Both messages are included
A: The cause is usually set in the constructor of the exception eg ExceptionString message Throwable cause If it isnt set in the constructor you can call initCauseThrowable cause
A: class Exception has constructors that take a cause Throwable You need to call those constructors or provide constructors to your custom exception classes that call these super constructors
A: The input type here is submit by looking at your HTML code so I would strongly advise to try the submit function of Selenium
A: Instead of Byname you should use Byid instead Therefore use either of these ByIdSearchButton ByCssSelectorinputSearchButton ByXpathinputidSearchButton Note syntax could be wrong please adjust depending on your programming language
A: try below code even timeout exception occurs it will try time to click on it assuming locator is correct BynameSearchButton public void searchquotation int count whilecount try WebElement x driverfindElementBynameSearchButton WebDriverWait elementnew WebDriverWaitdriver elementuntil ExpectedConditionspresenceOfElementLocatedBynameSearchButton xclick countcount catchTimeoutException e countcount SystemoutprintlnTimeout occured continue
A: A blank raise raises the last exception need to reraise err so caller can do its own handling if err raise If you use raise something Python has no way of knowing if something was an exception just caught before or a new exception with a new stack trace Thats why there is the blank raise that preserves the stack trace Reference here
A: It is possible to modify and rethrow an exception If no expressions are present raise reraises the last exception that was active in the current scope If no exception is active in the current scope a TypeError exception is raised indicating that this is an error if running under IDLE a QueueEmpty exception is raised instead Otherwise raise evaluates the expressions to get three objects using None as the value of omitted expressions The first two objects are used to determine the type and value of the exception If a third object is present and not None it must be a traceback object see section The standard type hierarchy and it is substituted instead of the current location as the place where the exception occurred If the third object is present and not a traceback object or None a TypeError exception is raised The threeexpression form of raise is useful to reraise an exception transparently in an except clause but raise with no expressions should be preferred if the exception to be reraised was the most recently active exception in the current scope So if you want to modify the exception and rethrow it you can do this try buggycodewhichthrowsexception except Exception as e raise Exception The code is buggy s e sysexcinfo
A: You can get a lot of information about the exception via the sysexcinfo along with the traceback module try the following extension to your code import sys import traceback def func func def func raise Exceptiontest error def main try func except exctype excvalue exctraceback sysexcinfo Do your verification using excvalue and exctraceback print printexception tracebackprintexceptionexctype excvalue exctraceback limit filesysstdout if name main main This would print similar to what you wanted printexception Traceback most recent call last File errtestpy line in main func File errtestpy line in func func File errtestpy line in func raise Exceptiontest error Exception test error
A: ES added the cause non enumerable property to Error objects which can be set from the constructor function doThing try throw new ErrorInternal Error catch err throw new ErrorDo thing failed cause err try doThing catch err consolelogError err consolelogCause errcause Supported in Chrome Firefox Safari Nodejs v From the tc proposal there is an esshim Error implementation and how the cause property is set See Scotty Jamisons answer for more stack trace detail Answer prior to Im not aware of a native method like Javas and Ive not found an elegant solution for wrapping errors yet The problem with creating a new Error is you can lose metadata that was attached to the original Error that was thrown the stack trace and type are generally the important items lost Making modifications to an existing thrown error is quicker but it is still possible to modify data from the error out of existence It also feels wrong to be poking around in an error that was created somewhere else Create a new Error and new stack The stack property of a new Error is a plain string and can be modified to say what you like before it is thrown Replacing an errors stack property completely can get really confusing for debugging though When the original thrown error and the error handler are in separate locations or files which is common with promises you might be able to trace the source of the original error but not trace the handler where the error was actually trapped To avoid this its good to keep some references to both the original and new error in the stack Its also useful to have access to the complete original error if there was additional metadata stored in it Heres an example of catching an error wrapping it in a new error but adding the original stack and storing the error try throw new ErrorFirst one catch error let e new ErrorRethrowing the errormessage error eoriginalerror error estack estacksplitnslicejoinn n errorstack throw e Which throws sotestjs throw e Error Rethrowing the First one error at test sotestjs Error First one at test sotestjs at Objectanonymous sotestjs at Modulecompile modulejs at ObjectModuleextensionsjs modulejs at Moduleload modulejs at tryModuleLoad modulejs at FunctionModuleload modulejs at ModulerunMain modulejs at run bootstrapnodejs at startup bootstrapnodejs So weve created a new generic Error Unfortunately the type of the original error becomes hidden from the output but the error has been attached as originalerror so it can still be accessed The new stack has been largely removed except for the generating line which is important and the original errors stack appended Any tools that try to parse stack traces might not work with this change or best case they detect two errors Rethrowing with ES Error Classes Making this into a reusable ES Error class class RethrownError extends Error constructormessage error supermessage thisname thisconstructorname if error throw new ErrorRethrownError requires a message and error thisoriginalerror error thisstackbeforerethrow thisstack const messagelines thismessagematchnglength thisstack thisstacksplitnslice messagelinesjoinn n errorstack throw new RethrownErrorOh no a errormessage error error Results in sotestjs throw new RethrownErrorOh no a errormessage error error RethrownError Oh no a First one error at test sotestjs Error First one at test sotestjs at Objectanonymous sotestjs at Modulecompile modulejs at ObjectModuleextensionsjs modulejs at Moduleload modulejs at tryModuleLoad modulejs at FunctionModuleload modulejs at ModulerunMain modulejs at run bootstrapnodejs at startup bootstrapnodejs Then you know that whenever you see a RethrownError that the original error will still be available at originalerror This method is not perfect but it means I can retype known errors from underlying modules into generic types that be handled more easily usually with bluebirds filtered catch catchTypeError handler Note stack becomes enumerable here Same Error with a modified stack Some times you will need to keep the original error mostly as is In this case you can just appendinsert the new info onto existing stack file homejimplumbers try JSONparsek catch e let message JSON parse error in file let stack new Errormessagestack estack estack nFrom previous stacksplitnslicejoinn n throw e Which returns sothrowerrorreplacestackjs throw e SyntaxError Unexpected token k in JSON at position at Objectparse native at Objectanonymous sothrowerrorreplacestackjs at Modulecompile modulejs at ObjectModuleextensionsjs modulejs at Moduleload modulejs at tryModuleLoad modulejs at FunctionModuleload modulejs at ModulerunMain modulejs at run bootstrapnodejs at startup bootstrapnodejs From previous Error JSON parse error in homejimplumbers at Objectanonymous sothrowerrorreplacestackjs Also note that the stack processing is simple and assumes the error message is a single line If you run into multi line error messages you might need to look for n at to terminate the message
A: If all you want to do is change the message you can just change the message try throw new ErrorOriginal Error catcherr errmessage Here is some context errmessage throw err UPDATE If the message property is readonly you can create a new object using the original error as the prototype and assigning a new message try line documentquerySelectorAlldivfoo Throws a DOMException invalid selector catcherr let message Here is some context errmessage let e Objectcreate err message value message throw e line Unfortunately the logged message for an Exception is just Uncaught exception without the message that came with the Exception so it might be helpful to create an Error and give it the same stack so the logged message will include the error message try line documentquerySelectorAlldivfoo Throws a DOMException invalid selector catcherr e new Error Here is some context errmessage estack errstack throw e line Since the snippet output shows the line number of the rethrow this confirms that the stack is preserved try line try line documentquerySelectorAlldivfoo Throws a DOMException invalid selector catcherr consolelog Stack starts with message errstacksplitn consolelog Inner catch from errstacksplitn e new Error Here is some context errmessage line consolelog New error from estacksplitn estack errstack throw e line catcherr consolelog Outer catch from errstacksplitn throw err line
A: JavaScript has introduced the ability to create a new error and tack on a cause causing the original stack trace to be preserved as documented here It looks like this try someDangerousLogic catch originalError throw new Error Some additional useful information cause originalError Complete example function someDangerousLogic throw new ErrorWhoops function main try someDangerousLogic catch originalError throw new Error Some additional useful information cause originalError main Unfortunately not all browsers will display the error cause when the error goes uncaught If I run the above full example in Chrome v then look at dev tools for the error Ill only find the new stack trace the cause is still accessible via the cause property Node on the other hand shows both the error and the cause when it goes uncaught Error Some additional useful information at main homemetempjs at Objectanonymous homemetempjs lines matching cause stack trace at nodeinternalmainrunmainmodule cause Error Whoops at someDangerousLogic homemetempjs at main homemetempjs at Objectanonymous homemetempjs at Modulecompile nodeinternalmodulescjsloader at Moduleextensionsjs nodeinternalmodulescjsloader at Moduleload nodeinternalmodulescjsloader at Moduleload nodeinternalmodulescjsloader at FunctionexecuteUserEntryPoint as runMain nodeinternalmodulesrunmain at nodeinternalmainrunmainmodule
A: This has nothing to do with the WebView I have been having the same problem on CI machines and it is usually related to keychain problems Steps that may help Check if the identity is installed security findidentity p codesigning loginkeychain or whatever keychain you use Manually lockunlock keychain Try to sign a random file with codesign force sign FF footxt and press Always allow in the dialog that shows up
A: if you using one drive in macOS try to build an app outside One drive for example the desktop works for me this screen shows that flutter app works on IOS simulator
A: I got this problem after upgrading flutter and upgrading some packages after hours from searching i got nothing to fix this problem but i fixed the problem by the following steps Delete ios folder Go back to last ios folder before upgrading flutter from local or remote repo and copy it Just paste the folder in root flutter project folder
A: The base of the exception appears to be coming from FileOutputStreamwrite have you added the write permissions to your manifest usespermission androidnameandroidpermissionWRITEEXTERNALSTORAGE
A: Add This Permission in your mainfestI hope its work for you u should initialize this objectIn Your code you give the context value null thats why it is not working Required Some Intilization instead of null ContextWrapper myContext null usespermission androidnameandroidpermissionWRITEEXTERNALSTORAGE
A: Please using AsyncTask or Thread If you wrote your own method you can use like this new Thread new Runnable Override public void run copyStream OR using AsyncTask
A: Got the culprit Its the extra comma at the end of last email address mailMessageToAddamirkhanentercomwalterwhiteyahoocom Just removed that and voila its working Dont know why its working in console application but not in sharepoint mailMessageToAddamirkhanentercomwalterwhiteyahoocom If this does not work in SharePoint then please add each address separately onto MailMessage object like below foreach var address in StringofEmailsSplit MailMessageToAddnew MailAddressaddressTrim
A: I got the error even though I dont have a comma at the end It turns out that I need to leave a space after the comma I have to change my code from a stringJoin emailList to stringJoin emailList Following didnt work for me mailMessageToAddamirkhanentercomwalterwhiteyahoocom Following worked for meObserve that there is space after the comma mailMessageToAddamirkhanentercom walterwhiteyahoocom
A: I cant replicate this The above code works for me Maybe try to add them using a seperate To each time mailMessageToAddx mailMessageToAddy
A: It looks like cache error something tries to find saved cache css and js files but fails Try to Flush ALL caches via drush cr or via admin interface Delete all files in sitesdefaultfilescss and sitesdefaultfilesjs directories If this will not help it will be better to create issue on drupalorg It is a new problem Ive got similar issue after upgrade from to After doing above steps and Im waiting if this error will appear again If not it is old cache problem if error will appear it is a bug and we need to go to step
A: We ran into this problem as well after Upgrading to Drupal yesterdayin debugging I noticed that the aggregated CSS and Javascript files have a query string appended with multiple items In our case we have a CDN for performance and security reasons and the Web Application Firewall WAF provided has a default rule to strip off the query strings for all requests from the general public to prevent certain types of security flaws It looks like we have to add a query string rule exception to allow those parameters being passed through for sitesdefaultfilescss and sitesdefaultfilesjs The change that caused this is described here httpswwwdrupalorgnode
A: This issue has been logged in the Drupal issue queue at httpswwwdrupalorgprojectdrupalissues As of this writing it its status is Postponed
A: In Jest you have to pass a function into expectfunctiontoThrowblank or type of error Example testTest description const t throw new TypeError expectttoThrowTypeError Or if you also want to check for error message testTest description const t throw new TypeErrorUNKNOWN ERROR expectttoThrowTypeError expectttoThrowUNKNOWN ERROR If you need to test an existing function whether it throws with a set of arguments you have to wrap it inside an anonymous function in expect Example testTest description expect httpgetyourUrl yourCallbackFntoThrowTypeError
A: It is a little bit weird but it works and IMHO is good readable itshould throw Error with message UNKNOWN ERROR when no parameters were passed try throwError Fail test if above expression doesnt throw anything expecttruetoBefalse catch e expectemessagetoBeUNKNOWN ERROR The Catch block catches your exception and then you can test on your raised Error Strange expecttruetoBefalse is needed to fail your test if the expected Error will be not thrown Otherwise this line is never reachable Error should be raised before them Kenny Body suggested a better solution which improve a code quality if you use expectassertions itshould throw Error with message UNKNOWN ERROR when no parameters were passed expectassertions try throwError catch e expectemessagetoBeUNKNOWN ERROR See the original answer with more explanations How to test the type of a thrown exception in Jest EDIT To use this approach and not trigger noconditionalexpect rule if youre using eslintpluginjest documentation of this rule suggest to use error wrapper class NoErrorThrownError extends Error const getError async TErrorcall unknown PromiseTError try await call throw new NoErrorThrownError catch error unknown return error as TError describewhen the http request fails itincludes the status code in the error async const error await getErrorasync makeRequesturl check that the returned error wasnt that no error was thrown expecterrornottoBeInstanceOfNoErrorThrownError expecterrortoHavePropertystatusCode See noconditionalexpect docs
A: I use a slightly more concise version expect Code block that should throw error toThrowTypeError Or toThrowexpectedErrorMessage
A: I had this error even though I got no errors at build time it was extremely difficult to figure out took a couple days It turned out some of my incoming data was rendering into some invalid html something was wrong with a dynamically created script tag I was able to solve this error by trial and error removing different pieces of incoming data and seeing if my pages would render Would start there if I had to do it again
A: I had the same error but there could be any reason I would recommend to check your html tags first It is also was useful to run app in dev mode and carefully look at the errors in console In my case the problem was in the incorrect transfer of props from the parent component to child and than to subchild I was passing the function call in props Solved the problem by creating a function in the final child component without passing I hope this helps
A: The best way to debug these sorts of errors and avoid your application from crashing is using React Error boundaries httpsnextjsorgdocsadvancedfeatureserrorhandlinghandlingclienterrors
A: solved I was not using the proper annotation in my model class DynamoDbSecondaryPartitionKeyindexNames categoryindex public String getCategory return category public void setCategoryString category thiscategory category
A: Assume you have a model named Issues package comexampledynamodb import softwareamazonawssdkenhanceddynamodbmapperannotationsDynamoDbBean import softwareamazonawssdkenhanceddynamodbmapperannotationsDynamoDbPartitionKey import softwareamazonawssdkenhanceddynamodbmapperannotationsDynamoDbSecondaryPartitionKey import softwareamazonawssdkenhanceddynamodbmapperannotationsDynamoDbSortKey DynamoDbBean public class Issues private String issueId private String title private String createDate private String description private String dueDate private String status private String priority private String lastUpdateDate DynamoDbPartitionKey public String getId return thisissueId public void setIdString id thisissueId id DynamoDbSortKey public String getTitle return thistitle public void setTitleString title thistitle title public void setLastUpdateDateString lastUpdateDate thislastUpdateDate lastUpdateDate public String getLastUpdateDate return thislastUpdateDate public void setPriorityString priority thispriority priority public String getPriority return thispriority public void setStatusString status thisstatus status public String getStatus return thisstatus public void setDueDateString dueDate thisdueDate dueDate DynamoDbSecondaryPartitionKeyindexNames dueDateIndex public String getDueDate return thisdueDate public String getDate return thiscreateDate public void setDateString date thiscreateDate date public String getDescription return thisdescription public void setDescriptionString description thisdescription description Notice the annotation on getDueDate DynamoDbSecondaryPartitionKeyindexNames dueDateIndex public String getDueDate return thisdueDate This is because the Issues table has a secondary index named dueDateIndex To query on this secondary index you can use this code that uses the Amazon DynamoDB Java API V public static void queryIndexDynamoDbClient ddb String tableName String indexName try Create a DynamoDbEnhancedClient and use the DynamoDbClient object DynamoDbEnhancedClient enhancedClient DynamoDbEnhancedClientbuilder dynamoDbClientddb build Create a DynamoDbTable object based on Issues DynamoDbTableIssues table enhancedClienttableIssues TableSchemafromBeanIssuesclass String dateVal DynamoDbIndexIssues secIndex enhancedClienttableIssues TableSchemafromBeanIssuesclass indexdueDateIndex AttributeValue attVal AttributeValuebuilder sdateVal build Create a QueryConditional object thats used in the query operation QueryConditional queryConditional QueryConditional keyEqualToKeybuilderpartitionValueattVal build Get items in the Issues table SdkIterablePageIssues results secIndexquery QueryEnhancedRequestbuilder queryConditionalqueryConditional build AtomicInteger atomicInteger new AtomicInteger atomicIntegerset resultsforEachpage Issues issue Issues pageitemsgetatomicIntegerget SystemoutprintlnThe issue title is issuegetTitle atomicIntegerincrementAndGet catch DynamoDbException e SystemerrprintlnegetMessage Systemexit
A: For what its worth if your Global Secondary Index has a sort key you must annotate that field in the DynamoDB bean with DynamoDbSecondarySortKeyindexNames indexName public String getFieldName return fieldName
A: For the latest version of cloudfirestore or above finally i found the solution And the older version of cloudfirestore it is solved by simply adding at the end to avoid a null value factory UserfromDocumentDocumentSnapshot doc return User id docdataid but in the new version that not possible because return Bad state factory UserfromDocumentDocumentSnapshot doc return User id docgetid And it is solved by simply checking that the doc contains the key factory UserfromDocumentDocumentSnapshot doc return User id docdatatoStringcontainsid docgetid String amount docdatatoStringcontainsamount docgetamount Number enable docdatatoStringcontainsenable docgetenable falseBoolean tags docdatatoStringcontainstags docgettagsentriesmape TagModelname ekey value evaluetoList Listdynamic Hope this helps regards
A: I think you can also try the connection by attempt to create a database php binconsole doctrinedatabasecreate If youre using Symfony you need to use php appconsole doctrinedatabasecreate I also see that in the string DATABASEURLmysqlrootsymfonyprojectserverVersion You didnt specify the password for root user Although that might be not an issue if the password is unspecified at the beginning its better to recheck these credentials
A: Change your factory to this factory UserfromDocumentDocumentSnapshot doc return User id docdataid email docdataemail username docdatausername photoUrl docdataphotoUrl displayName docdatadisplayName bio docdatabio fullNames docdatafullNames practice docdatapractice speciality docdataspeciality phone docdataphone mobile docdatamobile emergency docdataemergency address docdataaddress city docdatacity location docdatalocation
A: You have to configure your doctrineyaml doctrine dbal dbname database charset utf user user password secret driver pdomysql Check the documentation httpssymfonycomdoccurrentreferenceconfigurationdoctrinehtml
A: I had the same problem and I solved it by asking if the parameter exists This was my previous code ifwidgetdocumentimageUrl nullhere was my error I was calling a field that did not exist in the document Container childIcon Iconsimage size color Colorsgrey This is how it works for me ifwidgetdocumentdatacontainsKeyimageUrl Container childIcon Iconsimage size color Colorsgrey
A: The phpini file might differ so use this command on your project directory terminal php ini This command will give you the directions to your project phpini file In my case it was CProgram FilesphpWinvsxphpini in other cases its located in the xampphp folder Then locate or search for extensionbz and extensionpdomysql Make sure they are both uncommented Heres what it looks like Make sure you define your db variables in your configdoctrineyaml like this doctrine url envresolveDATABASEURL dbal dbname database charset utf user user password secret driver pdomysql Or you could also use your env to define database link by uncommenting the url field in doctrine above and go to your env file DATABASEURLmysqldatabaseusernamethisisdatabasepassworddatabasenameserverVersioncharsetutfmb Make sure all parameters are correct else youll get access denied error from mysql From here on all doctrine commands sould work fine
A: See httpsstackoverflowcoma In the command line on behalf of the administrator net stop winnat net start winnat
A: So this makes absolutely no sense but I was able to get it working by setting the debugger to use IIS Express instead of the project name Its the dropdown next to the green play button in VS not sure what that settings called Anyway that fixed it for me
A: In ASPNET Core It is resolved by changing the port number specified in the launchSettingsjson file for me To fix the issue follow these steps Locate the launchSettingsjson file in your ASPNET Core project It is typically located in the Properties or PropertieslaunchSettings folder Open the launchSettingsjson file and locate the profile you are using for running the application The profile names are usually IIS Express or Kestrel Within the profile settings locate the applicationUrl property This property specifies the URL and port number that the development server should listen on Change the port number to a different value that is not being used by any other application For example you can change it from httpslocalhost to httpslocalhost Save the launchSettingsjson file
A: The AWS managed keys awss can only be used in the same account ie where the key exists in your case its Account A You can either try to use the awss CMK from Account B OR create a customer managed CMK in Account A and share it with Account B following the steps here
A: Theres a couple of things For the policy on the bucket Deny permissions should be always at the end after all the Allow permissions And remove the condition on the Deny permissions You want to block all traffic thats not authorized Use a managed KMS key And on that key grant kmsdecrypt to the glue role on the keys policy
A: As documented here you must use the full ARN of the encryption key so crossaccount succeeds Using an alias or key ID does not work Be aware of the following when using encryption for crossaccount operations The AWS managed key awss is used when a AWS KMS key Amazon Resource Name ARN or alias is not provided at request time nor via the buckets default encryption configuration If youre uploading or accessing S objects using AWS Identity and Access Management IAM principals that are in the same AWS account as your KMS key you can use the AWS managed key awss Use a customer managed key if you want to grant crossaccount access to your S objects You can configure the policy of a customer managed key to allow access from another account If specifying your own KMS key you should use a fully qualified KMS key key ARN When using a KMS key alias be aware that AWS KMS will resolve the key within the requesters account This can result in data encrypted with a KMS key that belongs to the requester and not the bucket administrator You must specify a key that you the requester have been granted Encrypt permission to For more information see Allows key users to use a KMS key for cryptographic operations in the AWS Key Management Service Developer Guide The S bucket should look something like this
A: I got the same Exception with PostgreSQL but I connect to a local db on the same host The reason was the connection which was not valid any more and so I needed to open it again There is a ticket on postgresqlorg which has a related topic Their answer is pretty similar by just catching the exception and reopen the connection
A: I suspect that your application and the database are on different machines and theres a stateful firewall somewhere in between My guess is that the firewall is dropping the connection after it has been open for a certain amount of time perhaps with no traffic on it The connection pool wouldnt be able to detect this before handing you a broken connection The only thing that makes me doubt this is that its always happening in the same place in the code but if that is the first database query in a new session or something like that its not inconceivable it could always appear in the same place
A: I got the same Exception In my case My DB is getting restarted due to heavy usage of memory by some query Thats why I am getting that error during the restart of the DB solution I optimized my query
